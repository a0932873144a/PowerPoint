<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE coverage SYSTEM "http://cobertura.sourceforge.net/xml/coverage-04.dtd">
<coverage line-rate="0.283052837573386" branch-rate="0.163545085923924" lines-covered="3616" lines-valid="12775" branches-covered="847" branches-valid="5179" complexity="4863" version="0" timestamp="1702491678">
  <sources />
  <packages>
    <package name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter" line-rate="0.466299416720674" branch-rate="0.290812954395241" complexity="1128">
      <classes>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Constants" filename="/_/src/Adapter/MSTest.TestAdapter/Constants.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.AssemblyEnumerator" filename="/_/src/Adapter/MSTest.TestAdapter/Discovery/AssemblyEnumerator.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="RunSettingsXml" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunSettingsXml" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EnumerateAssembly" signature="(System.String,System.Collections.Generic.ICollection`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypes" signature="(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLoadExceptionDetails" signature="(System.Reflection.ReflectionTypeLoadException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeEnumerator" signature="(System.Type,System.String,System.Boolean,Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoverTestsInType" signature="(System.String,System.String,System.Type,System.Collections.Generic.List`1&lt;System.String&gt;,System.Boolean,Microsoft.VisualStudio.TestTools.UnitTesting.TestDataSourceDiscoveryOption,Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DynamicDataAttached" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement,System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryProcessDataSource" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryProcessDataSourceTests" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryProcessTestDataSourceTests" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessTestDataSourceTests" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement,System.Reflection.MethodInfo,Microsoft.VisualStudio.TestTools.UnitTesting.ITestDataSource[],System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.AssemblyEnumeratorWrapper" filename="/_/src/Adapter/MSTest.TestAdapter/Discovery/AssemblyEnumeratorWrapper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetTests" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunSettings,System.Collections.Generic.ICollection`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestsInIsolation" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunSettings,System.Collections.Generic.ICollection`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.TestMethodValidator" filename="/_/src/Adapter/MSTest.TestAdapter/Discovery/TestMethodValidator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValidTestMethod" signature="(System.Reflection.MethodInfo,System.Type,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.TypeEnumerator" filename="/_/src/Adapter/MSTest.TestAdapter/Discovery/TypeEnumerator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type,System.String,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.TypeValidator,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.TestMethodValidator,Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enumerate" signature="(System.Collections.Generic.ICollection`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTests" signature="(System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFromMethod" signature="(System.Reflection.MethodInfo,System.Boolean,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Discovery.TypeValidator" filename="/_/src/Adapter/MSTest.TestAdapter/Discovery/TypeValidator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValidTestClass" signature="(System.Type,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasCorrectTestContextSignature" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeHasValidAccessibility" signature="(System.Reflection.TypeInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.ExceptionHelper" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/ExceptionHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetStackTraceInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrimStackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFormattedExceptionMessage" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateStackTraceInformation" signature="(System.Exception,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasReferenceToUTF" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.LogMessageListener" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/LogMessageListener.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="StandardOutput" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finalize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAndClearStandardOutput" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAndClearStandardError" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAndClearDebugTrace" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.RunCleanupResult" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/RunCleanupResult.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="StandardOut" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardOut" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardError" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warnings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Warnings" signature="(System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TcmTestPropertiesProvider" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TcmTestPropertiesProvider.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTcmProperties" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestAssemblyInfo" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestAssemblyInfo.cs" line-rate="1" branch-rate="1" complexity="18">
          <methods>
            <method name="AssemblyInitializeMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInitializeMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyCleanupMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyCleanupMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssemblyInitializeExecuted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssemblyInitializeExecuted" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInitializationException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInitializationException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExecutableCleanupMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAssemblyInitialize" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAssemblyCleanup" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
            <method name="ExecuteAssemblyCleanup" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestAssemblySettingsProvider" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestAssemblySettingsProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetSettings" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestCaseDiscoverySink" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestCaseDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Tests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SendTestCase" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestClassInfo.cs" line-rate="1" branch-rate="1" complexity="18">
          <methods>
            <method name="ClassAttribute" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Constructor" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContextProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassInitializeMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassInitializeMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsClassInitializeExecuted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsClassInitializeExecuted" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsClassCleanupExecuted" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsClassCleanupExecuted" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseClassCleanupMethodsStack" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseClassCleanupMethodsStack" signature="(System.Collections.Generic.Stack`1&lt;System.Reflection.MethodInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassInitializationException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassInitializationException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExecutableCleanupMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseClassInitAndCleanupMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestInitializeMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestInitializeMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCleanupMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCleanupMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseTestInitializeMethodsQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseTestCleanupMethodsQueue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Reflection.ConstructorInfo,System.Reflection.PropertyInfo,Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunClassInitialize" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunClassCleanup" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteClassCleanup" signature="()" line-rate="1" branch-rate="1" complexity="18">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestExecutionManager" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestExecutionManager.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="TestMethodFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodFilter" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestMethodFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAnyTestFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAnyTestFailed" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.IEnvironment,System.Func`2&lt;System.Action,System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestRunCancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestRunCancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetUnitTestDiscoverer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SendTestResults" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestResult[],System.DateTimeOffset,System.DateTimeOffset,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchTestFilter" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseFilterExpression,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestMethodFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteTestsInSource" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeClassCleanupManager" signature="(System.String,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.UnitTestRunner,System.Collections.Generic.ICollection`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestAssemblySettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteTestsWithTestRunner" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.UnitTestRunner)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestContextProperties" signature="(System.Collections.Generic.IDictionary`2&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestProperty,System.Object&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CacheSessionParameters" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestMethodInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsTimeoutSet" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotRunnableReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotRunnableReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunnable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethodOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAllAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttributes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteInternal" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExpectedException" signature="(System.Exception,Microsoft.VisualStudio.TestTools.UnitTesting.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRealException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleMethodException" signature="(System.Exception,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestCleanupMethod" signature="(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestInitializeMethod" signature="(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetTestContext" signature="(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestClassInstance" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteInternalWithTimeout" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodRunner" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestMethodRunner.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="RunTestMethod" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
            <method name="ExecuteDataSourceBasedTests" signature="(System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.TestResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteTestWithDataSource" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ITestDataSource,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteTestWithDataRow" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteTest" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAggregateOutcome" signature="(System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.TestResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateResultsWithParentInfo" signature="(System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.TestResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateResultsWithParentInfo" signature="(System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.TestResult&gt;,Microsoft.VisualStudio.TestTools.UnitTesting.TestResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TypeCache" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TypeCache.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="ClassInfoListWithExecutableCleanupMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInfoListWithExecutableCleanupMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInfoCache" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassInfoCache" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestMethodInfo" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetClassInfo" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadType" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateClassInfo" signature="(System.Type,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveTestContext" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyInfo" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssemblyOrClassInitializeMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssemblyOrClassCleanupMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateInfoWithInitializeAndCleanupMethods" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,System.Reflection.MethodInfo[]&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateInfoIfClassInitializeOrCleanupMethod" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,System.Reflection.MethodInfo,System.Boolean,System.Reflection.MethodInfo[]&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateInfoIfTestInitializeOrCleanupMethod" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,System.Reflection.MethodInfo,System.Boolean,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveTestMethod" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestMethodAttribute" signature="(System.Reflection.MethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodInfoForTestMethod" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodInfoUsingManagedNameHelper" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodInfoUsingRuntimeMethods" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestTimeout" signature="(System.Reflection.MethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetCustomProperties" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAndAssignTestProperty" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.UnitTestRunner" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/UnitTestRunner.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InitializeClassCleanupManager" signature="(System.Collections.Generic.ICollection`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;,System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunSingleTest" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunRequiredCleanups" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestResult[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTestMethodRunnable" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestResult[]&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;,System.Nullable`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior&gt;,Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MarkTestComplete" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestMethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod,System.Boolean&amp;,System.Boolean&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Extensions.ExceptionExtensions" filename="/_/src/Adapter/MSTest.TestAdapter/Extensions/ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetRealException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetMessage" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetStackTraceInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetUnitTestAssertException" signature="(System.Exception,Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome&amp;,System.String&amp;,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.StackTraceInformation&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Extensions.MethodInfoExtensions" filename="/_/src/Adapter/MSTest.TestAdapter/Extensions/MethodInfoExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="HasCorrectClassOrAssemblyInitializeSignature" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasCorrectClassOrAssemblyCleanupSignature" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasCorrectTestInitializeOrCleanupSignature" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasCorrectTestMethodSignature" signature="(System.Reflection.MethodInfo,System.Boolean,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasCorrectTimeout" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsVoidOrTaskReturnType" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAsyncTypeName" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeAsSynchronousTask" signature="(System.Reflection.MethodInfo,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Extensions.TestCaseExtensions" filename="/_/src/Adapter/MSTest.TestAdapter/Extensions/TestCaseExtensions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetTestName" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToUnitTestElement" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetManagedType" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetManagedType" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetManagedMethod" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetManagedMethod" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsManagedMethodAndType" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHierarchy" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetHierarchy" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Extensions.TestContextExtensions" filename="/_/src/Adapter/MSTest.TestAdapter/Extensions/TestContextExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetAndClearDiagnosticMessages" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Extensions.TestResultExtensions" filename="/_/src/Adapter/MSTest.TestAdapter/Extensions/TestResultExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ToUnitTestResults" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestResult[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Extensions.UnitTestOutcomeExtensions" filename="/_/src/Adapter/MSTest.TestAdapter/Extensions/UnitTestOutcomeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ToUnitTestOutcome" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMoreImportantOutcome" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome,Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.DataSerializationHelper" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/DataSerializationHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Serialize" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSerializer" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSerializer" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.DictionaryHelper" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/DictionaryHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConcatWithOverwrites" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.EnvironmentWrapper" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/EnvironmentWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="MachineName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.ReflectHelper" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/ReflectHelper.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsAttributeDefined" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAttributeDefined" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAttributeDerivedFrom" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAttributeDerivedFrom" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveExpectedExceptionHelper" signature="(System.Reflection.MethodInfo,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAttributes" signature="(System.Reflection.MethodBase,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchReturnType" signature="(System.Reflection.MethodInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttribute" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMethodDeclaredInSameAssemblyAsType" signature="(System.Reflection.MethodInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCategories" signature="(System.Reflection.MemberInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParallelizeAttribute" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDoNotParallelizeSet" signature="(System.Reflection.MemberInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDoNotParallelizeSet" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetClassCleanupAttribute" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributesRecursively" signature="(System.Reflection.MemberInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributeForAssembly" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttribute" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestOwnerAsTraits" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestPriorityAsTraits" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPriority" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIgnoreMessage" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetClassCleanupBehavior" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestClassInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDerivedAttribute" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDerivedAttribute" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOwner" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttributes" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTestPropertiesAsTraits" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.RunSettingsUtilities" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/RunSettingsUtilities.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReaderSettings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestRunParameters" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowOnHasAttributes" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNodeValue" signature="(System.String,System.String,System.Func`2&lt;System.Xml.XmlReader,T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.TestRunParameters" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/TestRunParameters.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FromXml" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Helpers.UnitTestOutcomeHelper" filename="/_/src/Adapter/MSTest.TestAdapter/Helpers/UnitTestOutcomeHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ToTestOutcome" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestDiscoverer" filename="/_/src/Adapter/MSTest.TestAdapter/MSTestDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreValidSources" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestExecutor" filename="/_/src/Adapter/MSTest.TestAdapter/MSTestExecutor.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="TestExecutionManager" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestExecutionManager" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.Execution.TestExecutionManager)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings" filename="/_/src/Adapter/MSTest.TestAdapter/MSTestSettings.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CurrentSettings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentSettings" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunConfigurationSettings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunConfigurationSettings" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.RunConfigurationSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CaptureDebugTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CaptureDebugTraces" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForcedLegacyMode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForcedLegacyMode" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestSettingsFile" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestSettingsFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapInconclusiveToFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapInconclusiveToFailed" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapNotRunnableToFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MapNotRunnableToFailed" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreatDiscoveryWarningsAsErrors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreatDiscoveryWarningsAsErrors" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EnableBaseClassTestMethodsFromOtherAssemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EnableBaseClassTestMethodsFromOtherAssemblies" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupLifecycle" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupLifecycle" signature="(System.Nullable`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizationWorkers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizationWorkers" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizationScope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizationScope" signature="(System.Nullable`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.ExecutionScope&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestTimeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestTimeout" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreatClassAndAssemblyCleanupWarningsAsErrors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreatClassAndAssemblyCleanupWarningsAsErrors" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="PopulateSettings" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PopulateSettings" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsLegacyScenario" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSettings" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToSettings" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateSettings" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetParallelSettings" signature="(System.Xml.XmlReader,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryParseEnum" signature="(System.String,T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetGlobalSettings" signature="(System.String,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.AdapterSettingsException" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/AdapterSettingsException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.StackTraceInformation" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/StackTraceInformation.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ErrorStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorStackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorFilePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorFilePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorLineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorLineNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorColumnNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorColumnNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestAssemblySettings" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/TestAssemblySettings.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Workers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Workers" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Scope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Scope" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ExecutionScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanParallelizeAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanParallelizeAssembly" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupLifecycle" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassCleanupLifecycle" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestFailedException" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/TestFailedException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="StackTraceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraceInformation" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.StackTraceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome,System.String,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.StackTraceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome,System.String,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.StackTraceInformation,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/TestMethod.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeclaringAssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeclaringAssemblyName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeclaringClassFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeclaringClassFullName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAsync" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAsync" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ManagedTypeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ManagedMethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasManagedMethodAndTypeProperties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hierarchy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestIdGenerationStrategy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataType" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.DynamicDataType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SerializedData" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SerializedData" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestGroup" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestGroup" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.Boolean,Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodBase,System.String,System.String,System.String,System.Boolean,Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String[],System.String,System.String,System.String,System.Boolean,Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethodOptions" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/TestMethodOptions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Timeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timeout" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedException" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContext" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CaptureDebugTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CaptureDebugTraces" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Executor" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Executor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TypeInspectionException" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/TypeInspectionException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/UnitTestElement.cs" line-rate="1" branch-rate="1" complexity="22">
          <methods>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignored" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ignored" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAsync" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAsync" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCategory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCategory" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Trait[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Priority" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Priority" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoNotParallelize" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoNotParallelize" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentItems" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentItems" signature="(System.Collections.Generic.KeyValuePair`2&lt;System.String,System.String&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsyncTypeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsyncTypeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CssIteration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CssIteration" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CssProjectStructure" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CssProjectStructure" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkItemIds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkItemIds" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToTestCase" signature="()" line-rate="1" branch-rate="1" complexity="18">
              <lines />
            </method>
            <method name="SetTestCaseId" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateDisplayNameStrategyTestId" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateSerializedDataStrategyTestId" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestResult" filename="/_/src/Adapter/MSTest.TestAdapter/ObjectModel/UnitTestResult.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorStackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionId" signature="(System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParentExecId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParentExecId" signature="(System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerResultsCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerResultsCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardOut" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardOut" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StandardError" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContextMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContextMessages" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorFilePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorFilePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorLineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorLineNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorColumnNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorColumnNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DatarowIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DatarowIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultFiles" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultFiles" signature="(System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.TestFailedException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestOutcome,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.DateTimeOffset,System.DateTimeOffset,System.String,Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.MSTestSettings)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.PlatformServiceProvider" filename="/_/src/Adapter/MSTest.TestAdapter/PlatformServiceProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDataSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileOperations" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AdapterTraceLogger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDeployment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SettingsProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThreadOperations" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReflectionOperations" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Instance" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.IPlatformServiceProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateTestSourceHost" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunSettings,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTraceListener" signature="(System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTraceListenerManager" signature="(System.IO.TextWriter,System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestContext" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ObjectModel.ITestMethod,System.IO.StringWriter,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.RunConfigurationSettings" filename="/_/src/Adapter/MSTest.TestAdapter/RunConfigurationSettings.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CollectSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectSourceInformation" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="PopulateSettings" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSettings" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToSettings" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestMethodFilter" filename="/_/src/Adapter/MSTest.TestAdapter/TestMethodFilter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetFilterExpression" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,System.Boolean&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyProvider" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyValueProvider" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseFilterFromRunContext" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseFilterFromDiscoveryContext" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestRunCancellationToken" filename="/_/src/Adapter/MSTest.TestAdapter/Execution/TestRunCancellationToken.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Canceled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Canceled" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Register" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unregister" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.UnitTestDiscoverer" filename="/_/src/Adapter/MSTest.TestAdapter/Discovery/UnitTestDiscoverer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestMethodFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodFilter" signature="(Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.TestMethodFilter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoverTestsInSource" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendTestCases" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.MSTest.TestAdapter.ObjectModel.UnitTestElement&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.TestExtensionTypesAttribute" filename="/_/src/Adapter/MSTest.TestAdapter/Properties/TestExtensionTypesAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Types" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices" line-rate="0.271422357546759" branch-rate="0.204288939051919" complexity="844">
      <classes>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.AdapterTraceLogger" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TraceLogger.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LogError" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogInfo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PrependAdapterName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.AppDomainWrapper" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/AppDomainWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateDomain" signature="(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unload" signature="(System.AppDomain)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.AssemblyResolver" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/AssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finalize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddSearchDirectoriesFromRunSetting" signature="(System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.RecursiveDirectoryPath&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReflectionOnlyOnResolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnResolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddSubdirectories" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesDirectoryExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDirectories" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesFileExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadAssemblyFrom" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReflectionOnlyLoadAssemblyFrom" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SearchAssembly" signature="(System.Collections.Generic.List`1&lt;System.String&gt;,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequestedAssemblyNameMatchesFound" signature="(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WindowsRuntimeMetadataReflectionOnlyNamespaceResolve" signature="(System.Object,System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnResolveInternal" signature="(System.Object,System.ResolveEventArgs,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryLoadFromCache" signature="(System.String,System.Boolean,System.Reflection.Assembly&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SafeLog" signature="(System.String,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SearchAndLoadAssembly" signature="(System.String,System.String,System.Reflection.AssemblyName,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Constants" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Constants.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.CsvDataConnection" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/CsvDataConnection.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TableName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataTablesAndViews" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetColumns" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadTable" signature="(System.String,System.Collections.IEnumerable,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadTable" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.OdbcDataConnection" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/OdbcDataConnection.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="CommandBuilder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Connection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetQuoteLiterals" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDefaultSchema" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetSchemaMetaData" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="QuoteIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnquoteIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FixConnectionString" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.OleDataConnection" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/OleDataConnection.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="CommandBuilder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Connection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetQuoteLiterals" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDefaultSchema" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetSchemaMetaData" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="QuoteIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnquoteIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FixConnectionString" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.SqlDataConnection" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/SqlDataConnection.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultSchema" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetSchemaMetaData" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FixConnectionString" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.TestDataConnection" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/TestDataConnection.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Connection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtendedDiagnosticsEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="PathNeedsFixup" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRelativePart" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FixPath" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteDiagnostics" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FixPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.TestDataConnectionFactory" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/TestDataConnectionFactory.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Create" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Create" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.TestDataConnectionSql" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/TestDataConnectionSql.cs" line-rate="1" branch-rate="1" complexity="25">
          <methods>
            <method name="Connection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CommandBuilder" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Factory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QuotePrefix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QuotePrefix" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QuoteSuffix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QuoteSuffix" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatalogSeparatorChar" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SchemaSeparatorChar" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.String,System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSchemaMetaData" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="PrepareNameForSql" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JoinAndQuoteName" signature="(System.String[],System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetQuoteLiterals" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="QuoteIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnquoteIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetQuoteLiteralsHelper" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MaybeQuote" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindSeparators" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindIdentifierEnd" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultSchema" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDataTablesAndViews" signature="()" line-rate="1" branch-rate="1" complexity="12">
              <lines />
            </method>
            <method name="GetColumns" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitTableName" signature="(System.String,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatTableNameForDisplay" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInArray" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOpen" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="IsMSSql" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsUserSchema" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultSchemaMSSql" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ReadTable" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetColumnsSQL" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Data.XmlDataConnection" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Data/XmlDataConnection.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataTablesAndViews" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetColumns" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadTable" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadDataSet" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.AssemblyLoadWorker" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Deployment/AssemblyLoadWorker.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.IAssemblyUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullPathToDependentAssemblies" signature="(System.String,System.Collections.Generic.IList`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTargetFrameworkVersionStringFromPath" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTargetFrameworkStringFromAssembly" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessChildren" signature="(System.Reflection.Assembly,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.ISet`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDependentAssembliesInternal" signature="(System.String,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.ISet`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Deployment/DeploymentItem.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="SourcePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourcePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RelativeOutputDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RelativeOutputDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OriginType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OriginType" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItemOriginType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItemOriginType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.TestRunDirectories" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Deployment/TestRunDirectories.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RootDeploymentDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RootDeploymentDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OutDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InMachineNameDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.DiaSessionOperations" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/DiaSessionOperations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateNavigationSession" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.Object,System.String,System.String,System.Int32&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposeNavigationSession" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SafeInvoke" signature="(System.Func`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Extensions.ExceptionExtensions" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Extensions/ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetExceptionMessage" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.FileOperations" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/FileOperations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LoadAssembly" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyPath" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesFileExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateNavigationSession" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.Object,System.String,System.String,System.Int32&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposeNavigationSession" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullFilePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SafeInvoke" signature="(System.Func`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.MSTestAdapterSettings" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/MSTestAdapterSettings.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DeploymentEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentEnabled" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeleteDeploymentDirectoryAfterTestRunIsComplete" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeleteDeploymentDirectoryAfterTestRunIsComplete" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeployTestSourceDependencies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeployTestSourceDependencies" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SearchDirectories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SearchDirectories" signature="(System.Collections.Generic.List`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.RecursiveDirectoryPath&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToSettings" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateSettings" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAppDomainCreationDisabled" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDirectoryListWithRecursiveProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveEnvironmentVariableAndReturnFullPathIfExist" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesDirectoryExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpandEnvironmentVariables" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadAssemblyResolutionPath" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.MSTestSettingsProvider" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/SettingsProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Settings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Load" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperties" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.RandomIntPermutation" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/RandomIntPermutation.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.RecursiveDirectoryPath" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/RecursiveDirectoryPath.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DirectoryPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DirectoryPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeSubDirectories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeSubDirectories" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.ReflectionOperations" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/ReflectionOperations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.Assembly,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.SequentialIntPermutation" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/SequentialIntPermutation.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestContextImplementation" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TestContextImplementation.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="CurrentTestOutcome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataConnection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataRow" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestRunDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestRunResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullyQualifiedTestClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ManagedType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ManagedMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ObjectModel.ITestMethod,System.IO.StringWriter,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddResultFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetOutcome" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDataRow" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDataConnection" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetPropertyValue" signature="(System.String,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddProperty" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetResultFiles" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetDiagnosticMessages" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ClearDiagnosticMessages" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestDataSource" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TestDataSource.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetData" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITestContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPermutation" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConnectionProperties" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute,System.String&amp;,System.String&amp;,System.String&amp;,Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestDeployment" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TestDeployment.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name="RunDirectories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunDirectories" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.TestRunDirectories)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentItemUtility,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentUtility,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.FileUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeploymentItems" signature="(System.Reflection.MethodInfo,System.Type,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cleanup" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="GetDeploymentDirectory" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Deploy" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeploymentInformation" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CanDeploy" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestSource" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TestSource.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ValidSourceExtensions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssemblyReferenced" signature="(System.Reflection.AssemblyName,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestSources" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TestSourceHost" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TestSourceHost.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.AppDomain)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunSettings,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunSettings,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.IAppDomain)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupHost" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="CreateInstanceForType" signature="(System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="SetContext" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetContext" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetAppBaseAsPerPlatform" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetResolutionPaths" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTargetFrameworkVersionString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConfigFileForTestSource" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddSearchDirectoriesSpecifiedInRunSettingsToAssemblyResolver" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.AssemblyResolver,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.ThreadOperations" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/ThreadOperations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Execute" signature="(System.Action,System.Int32,System.Threading.CancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.ThreadSafeStringWriter" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/ThreadSafeStringWriter.cs" line-rate="1" branch-rate="1" complexity="23">
          <methods>
            <method name=".ctor" signature="(System.IFormatProvider,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringBuilder" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ToStringAndClear" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Write" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Write" signature="(System.Char[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStringBuilderOrNull" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="GetOrAddStringBuilder" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Append" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Append" signature="(System.Char[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Append" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToStringAndClear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TraceListenerManager" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TraceListenerManager.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.IO.TextWriter,System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITraceListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Remove" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITraceListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Interface.ITraceListener)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.TraceListenerWrapper" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Services/TraceListener.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.IO.TextWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetWriter" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.AppDomainUtilities" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/AppDomainUtilities.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="XmlUtilities" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlUtilities" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.XmlUtilities)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetAppDomainFrameworkVersionBasedOnTestSource" signature="(System.AppDomainSetup,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTargetFrameworkVersionString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetConfigurationFile" signature="(System.AppDomainSetup,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateInstance" signature="(System.AppDomain,System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTargetFrameworkVersionFromVersionString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EnsureAppDomainUsesCorrectUICulture" signature="(System.AppDomain,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetUICulture" signature="(System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.AssemblyUtility" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/AssemblyUtility.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Cultures" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReflectionOnlyLoadFrom" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReflectionOnlyLoad" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssemblyExtension" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssembly" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSatelliteAssemblies" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullPathToDependentAssemblies" signature="(System.String,System.String,System.Collections.Generic.IList`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetResolutionPaths" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentItemUtility" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/DeploymentItemUtility.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.ReflectionUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetClassLevelDeploymentItems" signature="(System.Type,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeploymentItems" signature="(System.Reflection.MethodInfo,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValidDeploymentItem" signature="(System.String,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasDeploymentItems" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeploymentItems" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddDeploymentItem" signature="(System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInvalidPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeploymentItems" signature="(System.Object[],System.Collections.Generic.ICollection`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Concat" signature="(System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDeploymentItems" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToKeyValuePairs" signature="(System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromKeyValuePairs" signature="(System.Collections.Generic.KeyValuePair`2&lt;System.String,System.String&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentUtility" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/DeploymentUtility.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentItemUtility,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.AssemblyUtility,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.FileUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddDeploymentItemsBasedOnMsTestSetting" signature="(System.String,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRootDeploymentDirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddDependenciesOfDeploymentItem" signature="(System.String,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessNewStorage" signature="(System.String,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSatellites" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.String,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddDependencies" signature="(System.String,System.String,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentUtilityBase" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/DeploymentUtilityBase.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="FileUtility" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileUtility" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.FileUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentItemUtility" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentItemUtility" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentItemUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyUtility" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyUtility" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.AssemblyUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.DeploymentItemUtility,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.AssemblyUtility,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.FileUtility)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deploy" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.TestRunDirectories)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDeploymentDirectories" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestResultsDirectory" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConfigFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deploy" signature="(System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullPathToFilesCorrespondingToDeploymentItem" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem,System.String,System.String,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Boolean&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullPathToDeploymentItemSource" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOutputDirectoryValid" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem,System.String,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTestSourceConfigFileIfExists" signature="(System.String,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarnings" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deploy" signature="(System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,System.Collections.Generic.IList`1&lt;Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem&gt;,Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.TestRunDirectories)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDeploymentItemSourceAFile" signature="(System.String,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDeploymentItemSourceADirectory" signature="(Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Deployment.DeploymentItem,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.FileUtility" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/FileUtility.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateDirectoryIfNotExists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReplaceInvalidFileNameCharacters" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNextIterationDirectoryName" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CopyFileOverwrite" signature="(System.String,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindAndDeployPdb" signature="(System.String,System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFilesFromDirectory" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFilesFromDirectory" signature="(System.String,System.Func`2&lt;System.String,System.Boolean&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryConvertPathToRelative" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeleteDirectories" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesDirectoryExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesFileExist" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetAttributes" signature="(System.String,System.IO.FileAttributes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFilesInADirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDirectoriesInADirectory" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSymbolsFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.ReflectionUtility" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/ReflectionUtility.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.Assembly,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateAttributeInstance" signature="(System.Reflection.CustomAttributeData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddNewAttributes" signature="(System.Collections.Generic.IList`1&lt;System.Reflection.CustomAttributeData&gt;,System.Boolean,System.Type,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;,System.Collections.Generic.List`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsReflectionOnlyLoad" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTypeInheriting" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.Validate" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/Validate.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsFalse" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.VSInstallationUtilities" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/VSInstallationUtilities.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="VSInstallPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PathToPublicAssemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PathToPrivateAssemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCurrentProcessRunningInPortableMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsProcessRunningInPortableMode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestPlatform.MSTestAdapter.PlatformServices.Utilities.XmlUtilities" filename="/_/src/Adapter/MSTestAdapter.PlatformServices/Utilities/XmlUtilities.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AddAssemblyRedirection" signature="(System.String,System.Reflection.AssemblyName,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXmlDocument" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindOrCreateElement" signature="(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindOrCreateAssemblyBindingSection" signature="(System.Xml.XmlDocument,System.Xml.XmlElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddAssemblyBindingRedirect" signature="(System.Xml.XmlDocument,System.Xml.XmlElement,System.Reflection.AssemblyName,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="Microsoft.VisualStudio.TestPlatform.TestFramework" line-rate="0.0622140896614822" branch-rate="0.0588235294117647" complexity="437">
      <classes>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.AreEqual.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(T,T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(T,T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Single,System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Single,System.Single,System.Single,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Single,System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Single,System.Single,System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Single,System.Single,System.Single,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Single,System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Decimal,System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Decimal,System.Decimal,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Decimal,System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Decimal,System.Decimal,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Decimal,System.Decimal,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Decimal,System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Int64,System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Int64,System.Int64,System.Int64,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Int64,System.Int64,System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Int64,System.Int64,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Int64,System.Int64,System.Int64,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Int64,System.Int64,System.Int64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Double,System.Double,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Double,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Double,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Double,System.Double,System.Double,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Double,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.AreSame.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AreSame" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreSame" signature="(T,T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreSame" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotSame" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotSame" signature="(T,T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotSame" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="That" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReplaceNullChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowAssertFailed" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildUserMessage" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckParameterNotNull" signature="(System.Object,System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReplaceNulls" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareInternal" signature="(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.Fail.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Fail" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Fail" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fail" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.Inconclusive.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Inconclusive" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Inconclusive" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Inconclusive" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.IsInstanceOfType.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsInstanceOfType" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOfType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOfType" signature="(System.Object,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOfType" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOfType" signature="(System.Object,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInstanceOfType" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOfType" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOfType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOfType" signature="(System.Object,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOfType" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOfType" signature="(System.Object,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotInstanceOfType" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.IsNull.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNull" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNull" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNull" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNull" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.IsTrue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsTrue" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTrue" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFalse" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Assert" filename="/_/src/TestFramework/TestFramework/Assertions/Assert.ThrowsException.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name="ThrowsException" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsException" signature="(System.Action,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsException" signature="(System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsException" signature="(System.Func`1&lt;System.Object&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsException" signature="(System.Func`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsException" signature="(System.Action,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsExceptionAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ThrowsExceptionAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ThrowsExceptionAsync" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" filename="/_/src/TestFramework/TestFramework/Exceptions/AssertFailedException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" filename="/_/src/TestFramework/TestFramework/Exceptions/AssertInconclusiveException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/Lifecycle/Cleanup/ClassCleanupAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="InheritanceBehavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CleanupBehavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.InheritanceBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.InheritanceBehavior,Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.InheritanceBehavior,System.Nullable`1&lt;Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupExecutionAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/Lifecycle/Cleanup/ClassCleanupExecutionAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CleanupBehavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/Lifecycle/Initialization/ClassInitializeAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="InheritanceBehavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.InheritanceBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert" filename="/_/src/TestFramework/TestFramework/Assertions/CollectionAssert.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="That" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.ICollection,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.ICollection,System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.ICollection,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.Collections.ICollection,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.Collections.ICollection,System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.Collections.ICollection,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreNotNull" signature="(System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreNotNull" signature="(System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreNotNull" signature="(System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreUnique" signature="(System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreUnique" signature="(System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreUnique" signature="(System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubsetOf" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubsetOf" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubsetOf" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSubsetOf" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSubsetOf" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotSubsetOf" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEquivalent" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEquivalent" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEquivalent" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEquivalent" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEquivalent" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEquivalent" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreInstancesOfType" signature="(System.Collections.ICollection,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreInstancesOfType" signature="(System.Collections.ICollection,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllItemsAreInstancesOfType" signature="(System.Collections.ICollection,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreNotEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSubsetOfHelper" signature="(System.Collections.ICollection,System.Collections.ICollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetElementCounts" signature="(System.Collections.ICollection,System.Int32&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMismatchedElement" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Int32&amp;,System.Int32&amp;,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreCollectionsEqual" signature="(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IComparer.Compare" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/CssIterationAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CssIteration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/CssProjectStructureAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CssProjectStructure" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/DataSource/DataRowAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Data" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/DataSource/DataSourceAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ProviderInvariantName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConnectionString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TableName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataAccessMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataSourceSettingName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/DescriptionAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DynamicDataAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/DataSource/DynamicDataAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DynamicDataDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DynamicDataDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DynamicDataDisplayNameDeclaringType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DynamicDataDisplayNameDeclaringType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Microsoft.VisualStudio.TestTools.UnitTesting.DynamicDataSourceType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Type,Microsoft.VisualStudio.TestTools.UnitTesting.DynamicDataSourceType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/ExpectedExceptionAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowDerivedTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowDerivedTypes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/ExpectedExceptionBaseAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="NoExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SpecifiedNoExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SpecifiedNoExceptionMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultNoExceptionMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RethrowIfAssertException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" filename="/_/src/TestFramework/TestFramework/GenericParameterHelper.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="Data" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Data" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CompareTo" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Guard" filename="/_/src/TestFramework/TestFramework/Internal/Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsNotNull" signature="(System.Object,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNullOrEmpty" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/IgnoreAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IgnoreMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" filename="/_/src/TestFramework/TestFramework/Exceptions/InternalTestFailureException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.Logging.Logger" filename="/_/src/TestFramework/TestFramework/Logger.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LogMessage" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/OwnerAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Owner" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.ParallelizeAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/Lifecycle/ParallelizeAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Workers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Workers" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Scope" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Scope" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ExecutionScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/PriorityAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Priority" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert" filename="/_/src/TestFramework/TestFramework/Assertions/StringAssert.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="That" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.String,System.StringComparison,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.String,System.StringComparison,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.String,System.StringComparison,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String,System.Text.RegularExpressions.Regex)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String,System.Text.RegularExpressions.Regex,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String,System.Text.RegularExpressions.Regex)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String,System.Text.RegularExpressions.Regex,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.StringEx" filename="/_/src/TestFramework/TestFramework/Internal/StringEx.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsNullOrEmpty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullOrWhiteSpace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TestCategoryAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCategories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TestCategoryBaseAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TestClassAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTestMethodAttribute" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestDataSourceDiscoveryAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/DataSource/TestDataSourceDiscoveryAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DiscoveryOption" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestDataSourceDiscoveryOption)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategyAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/DataSource/TestIdGenerationStrategyAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Strategy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestIdGenerationStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TestMethodAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TestPropertyAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestResult" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TestResult.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Outcome" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFailureException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFailureException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogOutput" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogOutput" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContextMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestContextMessages" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionId" signature="(System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParentExecId" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParentExecId" signature="(System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerResultsCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerResultsCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Duration" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DatarowIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DatarowIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultFiles" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultFiles" signature="(System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/TimeoutAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Timeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" filename="/_/src/TestFramework/TestFramework/Exceptions/UnitTestAssertException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.UtfHelper" filename="/_/src/TestFramework/TestFramework/Internal/UtfHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetExceptionMsg" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute" filename="/_/src/TestFramework/TestFramework/Attributes/TestMethod/WorkItemAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Id" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute" filename="/_/src/TestFramework/TestFramework/Internal/NullableAttributes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ParameterValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute" filename="/_/src/TestFramework/TestFramework/Internal/NullableAttributes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.MemberNotNullAttribute" filename="/_/src/TestFramework/TestFramework/Internal/NullableAttributes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Members" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute" filename="/_/src/TestFramework/TestFramework/Internal/NullableAttributes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Members" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute" filename="/_/src/TestFramework/TestFramework/Internal/NullableAttributes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ParameterName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Diagnostics.CodeAnalysis.NotNullWhenAttribute" filename="/_/src/TestFramework/TestFramework/Internal/NullableAttributes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions" line-rate="0.0236363636363636" branch-rate="0" complexity="277">
      <classes>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" filename="/_/src/TestFramework/TestFramework.Extensions/ConfigurationSettings/DataSourceElement.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConnectionString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConnectionString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataTableName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataTableName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataAccessMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DataAccessMethod" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Key" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" filename="/_/src/TestFramework/TestFramework.Extensions/ConfigurationSettings/DataSourceElementCollection.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Item" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32,Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Remove" signature="(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Remove" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateNewElement" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetElementKey" signature="(System.Configuration.ConfigurationElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseAdd" signature="(System.Configuration.ConfigurationElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseAdd" signature="(System.Int32,System.Configuration.ConfigurationElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute" filename="/_/src/TestFramework/TestFramework.Extensions/Attributes/DeploymentItemAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OutputDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" filename="/_/src/TestFramework/TestFramework.Extensions/PrivateObject.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Target" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Target" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RealType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenericMethodCache" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Type[],System.Object[],System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Reflection.BindingFlags,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoke" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArrayElement" signature="(System.String,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetArrayElement" signature="(System.String,System.Object,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArrayElement" signature="(System.String,System.Reflection.BindingFlags,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetArrayElement" signature="(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetField" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetField" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetField" signature="(System.String,System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetField" signature="(System.String,System.Reflection.BindingFlags,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFieldOrProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetFieldOrProperty" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFieldOrProperty" signature="(System.String,System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetFieldOrProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperty" signature="(System.String,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Type[],System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperty" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAccessString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeHelper" signature="(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildGenericMethodCacheForType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericMethodFromCache" signature="(System.String,System.Type[],System.Type[],System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodCandidates" signature="(System.String,System.Type[],System.Type[],System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" filename="/_/src/TestFramework/TestFramework.Extensions/PrivateType.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReferencedType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Type[],System.Object[],System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Reflection.BindingFlags,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeStatic" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticArrayElement" signature="(System.String,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticArrayElement" signature="(System.String,System.Object,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticArrayElement" signature="(System.String,System.Reflection.BindingFlags,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticArrayElement" signature="(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticField" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticField" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticField" signature="(System.String,System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticField" signature="(System.String,System.Reflection.BindingFlags,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticFieldOrProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticFieldOrProperty" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticFieldOrProperty" signature="(System.String,System.Reflection.BindingFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticFieldOrProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticProperty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticProperty" signature="(System.String,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticProperty" signature="(System.String,System.Object,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStaticProperty" signature="(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStaticProperty" signature="(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeHelperStatic" signature="(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper" filename="/_/src/TestFramework/TestFramework.Extensions/RuntimeTypeHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CompareMethodSigAndName" signature="(System.Reflection.MethodBase,System.Reflection.MethodBase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHierarchyDepth" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMostDerivedNewSlotMeth" signature="(System.Reflection.MethodBase[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMethod" signature="(System.Reflection.MethodBase[],System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMostSpecificMethod" signature="(System.Reflection.MethodBase,System.Int32[],System.Type,System.Reflection.MethodBase,System.Int32[],System.Type,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMostSpecific" signature="(System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMostSpecificType" signature="(System.Type,System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration" filename="/_/src/TestFramework/TestFramework.Extensions/ConfigurationSettings/TestConfiguration.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="ConfigurationSection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadConfiguration" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" filename="/_/src/TestFramework/TestFramework.Extensions/ConfigurationSettings/TestConfigurationSection.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="DataSources" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Microsoft.VisualStudio.TestTools.UnitTesting.TestContext" filename="/_/src/TestFramework/TestFramework.Extensions/TestContext.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestRunDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeploymentDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestRunResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestResultsDirectory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDir" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDeploymentDir" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestLogsDir" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FullyQualifiedTestClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ManagedType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ManagedMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CurrentTestOutcome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="Moq" line-rate="0.0963940608060335" branch-rate="0.0542168674698795" complexity="1912">
      <classes>
        <class name="Moq.ActionObserver" filename="/_/src/Moq/ActionObserver.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReconstructExpression" signature="(System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateProxy" signature="(System.Type,System.Object[],Moq.MatcherObserver,Moq.ActionObserver/Recorder&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invocation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Next" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.MatcherObserver)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Intercept" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.AsInterface`1" filename="/_/src/Moq/AsInterface.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="AdditionalInterfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfiguredDefaultValues" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MutableInvocations" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsObjectInitialized" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MockedType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Behavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueProvider" signature="(Moq.DefaultValueProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventHandlers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InheritedInterfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Object" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MutableSetups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Switches" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Switches" signature="(Moq.Switches)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="As" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnGetObject" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.Awaitable" filename="/_/src/Moq/Async/Awaitable.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryGetResultRecursive" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.AwaitableFactory" filename="/_/src/Moq/Async/AwaitableFactory.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Create" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGet" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.AwaitableFactory`1" filename="/_/src/Moq/Async/AwaitableFactory`1.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Async.IAwaitableFactory.get_ResultType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateCompleted" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateFaulted" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateFaulted" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateResultExpression" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.TryGetResult" signature="(System.Object,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.AwaitableFactory`2" filename="/_/src/Moq/Async/AwaitableFactory`2.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResultType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateCompleted" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateFaulted" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.CreateFaulted" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Async.IAwaitableFactory.TryGetResult" signature="(System.Object,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.AwaitExpression" filename="/_/src/Moq/Async/AwaitExpression.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CanReduce" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NodeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Operand" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Async.IAwaitableFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="VisitChildren" signature="(System.Linq.Expressions.ExpressionVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.TaskFactory" filename="/_/src/Moq/Async/TaskFactory.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateCompleted" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.TaskFactory`1" filename="/_/src/Moq/Async/TaskFactory`1.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateCompleted" signature="(TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateResultExpression" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetResult" signature="(System.Threading.Tasks.Task`1&lt;TResult&gt;,TResult&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.ValueTaskFactory" filename="/_/src/Moq/Async/ValueTaskFactory.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateCompleted" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Async.ValueTaskFactory`1" filename="/_/src/Moq/Async/ValueTaskFactory`1.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateCompleted" signature="(TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFaulted" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateResultExpression" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetResult" signature="(System.Threading.Tasks.ValueTask`1&lt;TResult&gt;,TResult&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behavior" filename="/_/src/Moq/Behavior.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.Callback" filename="/_/src/Moq/Behaviors/Callback.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Action`1&lt;Moq.IInvocation&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.NoOp" filename="/_/src/Moq/Behaviors/NoOp.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.RaiseEvent" filename="/_/src/Moq/Behaviors/RaiseEvent.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Delegate,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.ReturnBase" filename="/_/src/Moq/Behaviors/ReturnBase.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.ReturnBaseOrDefaultValue" filename="/_/src/Moq/Behaviors/ReturnBaseOrDefaultValue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.ReturnComputedValue" filename="/_/src/Moq/Behaviors/ReturnComputedValue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Func`2&lt;Moq.IInvocation,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.ReturnValue" filename="/_/src/Moq/Behaviors/ReturnValue.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.ThrowComputedException" filename="/_/src/Moq/Behaviors/ThrowComputedException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Func`2&lt;Moq.IInvocation,System.Exception&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.ThrowException" filename="/_/src/Moq/Behaviors/ThrowException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Behaviors.VerifyInvocationCount" filename="/_/src/Moq/Behaviors/VerifyInvocationCount.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="(Moq.MethodCall,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="VerifyUpperBound" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Capture" filename="/_/src/Moq/Capture.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="In" signature="(System.Collections.Generic.ICollection`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="In" signature="(System.Collections.Generic.IList`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="With" signature="(Moq.CaptureMatch`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.CaptureMatch`1" filename="/_/src/Moq/CaptureMatch.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildCondition" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.CastleProxyFactory" filename="/_/src/Moq/Interception/CastleProxyFactory.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateProxy" signature="(System.Type,Moq.IInterceptor,System.Type[],System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMethodVisible" signature="(System.Reflection.MethodInfo,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTypeVisible" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.IInterceptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Intercept" signature="(Castle.DynamicProxy.IInvocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Castle.DynamicProxy.IInvocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="DetachFromUnderlying" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ShouldInterceptMethod" signature="(System.Type,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRelevantObjectMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Condition" filename="/_/src/Moq/Condition.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="IsTrue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Boolean&gt;,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.DefaultExpressionCompiler" filename="/_/src/Moq/DefaultExpressionCompiler.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Compile" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compile" signature="(System.Linq.Expressions.Expression`1&lt;TDelegate&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.DefaultValueProvider" filename="/_/src/Moq/DefaultValueProvider.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mock" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Kind" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDefaultParameterValue" signature="(System.Reflection.ParameterInfo,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultReturnValue" signature="(System.Reflection.MethodInfo,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.EmptyDefaultValueProvider" filename="/_/src/Moq/EmptyDefaultValueProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Kind" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateArray" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateEnumerable" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateEnumerableOf" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateQueryable" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateQueryableOf" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Evaluator" filename="/_/src/Moq/Evaluator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="PartialEval" signature="(System.Linq.Expressions.Expression,System.Func`2&lt;System.Linq.Expressions.Expression,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PartialEval" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.HashSet`1&lt;System.Linq.Expressions.Expression&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Eval" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;System.Linq.Expressions.Expression,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nominate" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.EventHandlerCollection" filename="/_/src/Moq/EventHandlerCollection.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(System.Reflection.EventInfo,System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Remove" signature="(System.Reflection.EventInfo,System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGet" signature="(System.Reflection.EventInfo,System.Delegate&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGet" signature="(System.Reflection.EventInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Expectation" filename="/_/src/Moq/Expectation.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="HasResultExpression" signature="(Moq.Async.IAwaitableFactory&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ExpressionComparer" filename="/_/src/Moq/ExpressionComparer.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Equals" signature="(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt;,System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt;,System.Func`3&lt;T,T,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsBinary" signature="(System.Linq.Expressions.BinaryExpression,System.Linq.Expressions.BinaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsConditional" signature="(System.Linq.Expressions.ConditionalExpression,System.Linq.Expressions.ConditionalExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsConstant" signature="(System.Linq.Expressions.ConstantExpression,System.Linq.Expressions.ConstantExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsElementInit" signature="(System.Linq.Expressions.ElementInit,System.Linq.Expressions.ElementInit)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsIndex" signature="(System.Linq.Expressions.IndexExpression,System.Linq.Expressions.IndexExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsInvocation" signature="(System.Linq.Expressions.InvocationExpression,System.Linq.Expressions.InvocationExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsLambda" signature="(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsListInit" signature="(System.Linq.Expressions.ListInitExpression,System.Linq.Expressions.ListInitExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMemberAssignment" signature="(System.Linq.Expressions.MemberAssignment,System.Linq.Expressions.MemberAssignment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMemberBinding" signature="(System.Linq.Expressions.MemberBinding,System.Linq.Expressions.MemberBinding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMember" signature="(System.Linq.Expressions.MemberExpression,System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMemberInit" signature="(System.Linq.Expressions.MemberInitExpression,System.Linq.Expressions.MemberInitExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMemberListBinding" signature="(System.Linq.Expressions.MemberListBinding,System.Linq.Expressions.MemberListBinding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMemberMemberBinding" signature="(System.Linq.Expressions.MemberMemberBinding,System.Linq.Expressions.MemberMemberBinding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsMethodCall" signature="(System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsNewArray" signature="(System.Linq.Expressions.NewArrayExpression,System.Linq.Expressions.NewArrayExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsNew" signature="(System.Linq.Expressions.NewExpression,System.Linq.Expressions.NewExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsParameter" signature="(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsTypeBinary" signature="(System.Linq.Expressions.TypeBinaryExpression,System.Linq.Expressions.TypeBinaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsUnary" signature="(System.Linq.Expressions.UnaryExpression,System.Linq.Expressions.UnaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsExtension" signature="(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ExpressionCompiler" filename="/_/src/Moq/ExpressionCompiler.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Instance" signature="(Moq.ExpressionCompiler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ExpressionExtensions" filename="/_/src/Moq/ExpressionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConvertIfNeeded" signature="(System.Linq.Expressions.Expression,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileUsingExpressionCompiler" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileUsingExpressionCompiler" signature="(System.Linq.Expressions.Expression`1&lt;TDelegate&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatch" signature="(System.Linq.Expressions.Expression,Moq.Match&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanSplit" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Split" signature="(System.Linq.Expressions.LambdaExpression,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetReboundProperty" signature="(System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToPropertyInfo" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsProperty" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPropertyIndexer" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssignItIsAny" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TMock,T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PartialEval" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PartialMatcherAwareEval" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PartialMatcherAwareEval_ShouldEvaluate" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToStringFixed" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ExpressionExtensions" filename="/_/src/Moq/Expressions/Visitors/Apply.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Apply" signature="(System.Linq.Expressions.Expression,System.Linq.Expressions.ExpressionVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ExpressionReconstructor" filename="/_/src/Moq/ExpressionReconstructor.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Instance" signature="(Moq.ExpressionReconstructor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Expressions.Visitors.ConstructorCallVisitor" filename="/_/src/Moq/Expressions/Visitors/ConstructorCallVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExtractArgumentValues" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitNew" signature="(System.Linq.Expressions.NewExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Expressions.Visitors.EvaluateCaptures" filename="/_/src/Moq/Expressions/Visitors/EvaluateCaptures.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="VisitMember" signature="(System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitUnary" signature="(System.Linq.Expressions.UnaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Expressions.Visitors.UpgradePropertyAccessorMethods" filename="/_/src/Moq/Expressions/Visitors/UpgradePropertyAccessorMethods.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="VisitMethodCall" signature="(System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Extensions" filename="/_/src/Moq/Extensions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CanCreateInstance" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanRead" signature="(System.Reflection.PropertyInfo,System.Reflection.MethodInfo&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanRead" signature="(System.Reflection.PropertyInfo,System.Reflection.MethodInfo&amp;,System.Reflection.PropertyInfo&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanWrite" signature="(System.Reflection.PropertyInfo,System.Reflection.MethodInfo&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanWrite" signature="(System.Reflection.PropertyInfo,System.Reflection.MethodInfo&amp;,System.Reflection.PropertyInfo&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultValue" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetImplementingMethod" signature="(System.Reflection.MethodInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokePreserveStack" signature="(System.Delegate,System.Collections.Generic.IReadOnlyList`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsExtensionMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGetAccessor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSetAccessor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsIndexerAccessor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPropertyAccessor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEventAddAccessor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEventRemoveAccessor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDelegateType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMockable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTypeMatcher" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTypeMatcher" signature="(System.Type,System.Type&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOrContainsTypeMatcher" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ImplementsTypeMatcherProtocol" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanOverride" signature="(System.Reflection.MethodBase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanOverrideGet" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanOverrideSet" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethods" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareTo" signature="(TTypes,TOtherTypes,System.Boolean,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameterTypeList" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameterTypes" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareParameterTypesTo" signature="(System.Delegate,TOtherTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInvokeMethodFromUntypedDelegateCallback" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubstituteTypeMatchers" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInterfaceMap" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindAllInnerMocks" signature="(Moq.SetupCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindLastInnerMock" signature="(Moq.SetupCollection,System.Func`2&lt;Moq.Setup,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.FailForStrictMock" filename="/_/src/Moq/Interception/InterceptionAspects.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Handle" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.FindAndExecuteMatchingSetup" filename="/_/src/Moq/Interception/InterceptionAspects.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Handle" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.GeneratedReturnsExtensions" filename="/_/src/Moq/ReturnsExtensions.Generated.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`2&lt;T,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`3&lt;T1,T2,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`4&lt;T1,T2,T3,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`5&lt;T1,T2,T3,T4,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`6&lt;T1,T2,T3,T4,T5,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`7&lt;T1,T2,T3,T4,T5,T6,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`8&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`2&lt;T,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`3&lt;T1,T2,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`4&lt;T1,T2,T3,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`5&lt;T1,T2,T3,T4,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`6&lt;T1,T2,T3,T4,T5,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`7&lt;T1,T2,T3,T4,T5,T6,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`8&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Guard" filename="/_/src/Moq/Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanCreateInstance" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ImplementsInterface" signature="(System.Type,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ImplementsTypeMatcherProtocol" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignmentToPropertyOrIndexer" signature="(System.Linq.Expressions.LambdaExpression,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOverridable" signature="(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsVisibleToProxyFactory" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEventAdd" signature="(System.Linq.Expressions.LambdaExpression,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEventRemove" signature="(System.Linq.Expressions.LambdaExpression,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotNull" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotNullOrEmpty" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotField" signature="(System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMockable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Positive" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanRead" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanWrite" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.HandleEventSubscription" filename="/_/src/Moq/Interception/InterceptionAspects.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Handle" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.HandleWellKnownMethods" filename="/_/src/Moq/Interception/InterceptionAspects.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Handle" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleEquals" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleGetHashCode" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleToString" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleMockGetter" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsObjectMethodWithoutSetup" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ImmutablePopOnlyStack`1" filename="/_/src/Moq/ImmutablePopOnlyStack.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(T[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="(Moq.ImmutablePopOnlyStack`1&lt;T&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.InnerMockSetup" filename="/_/src/Moq/InnerMockSetup.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Mock,Moq.MethodExpectation,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteCore" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetCore" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="VerifySelf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="get_InnerMocks" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Internals.InterfaceProxy" filename="/_/src/Moq/Interception/InterfaceProxy.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Invocation" filename="/_/src/Moq/Invocation.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodImplementation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IInvocation.get_Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchingSetup" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProxyType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnValue" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsVerified" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertResultToAwaitable" signature="(Moq.Async.IAwaitableFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MarkAsMatchedBy" signature="(Moq.Setup)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MarkAsVerified" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MarkAsVerifiedIfMatchedBy" signature="(System.Func`2&lt;Moq.Setup,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="Exception" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.InvocationAction" filename="/_/src/Moq/InvocationAction.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Action`1&lt;Moq.IInvocation&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.InvocationCollection" filename="/_/src/Moq/InvocationCollection.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToArray" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ToArray" signature="(System.Func`2&lt;Moq.Invocation,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.InvocationFunc" filename="/_/src/Moq/InvocationFunc.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Func`2&lt;Moq.IInvocation,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.It" filename="/_/src/Moq/It.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="IsAny" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="IsAny" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotNull" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="Is" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TValue,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Is" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`3&lt;System.Object,System.Type,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Is" signature="(TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInRange" signature="(TValue,TValue,Moq.Range)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsIn" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsIn" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsIn" signature="(TValue[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotIn" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotIn" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotIn" signature="(TValue[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegex" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegex" signature="(System.String,System.Text.RegularExpressions.RegexOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Moq.ITypeMatcher.Matches" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.ITypeMatcher.Matches" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.ITypeMatcher.Matches" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.NonVoidSetupPhrase`2" filename="/_/src/Moq/Language/Flow/NonVoidSetupPhrase.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Moq.MethodCall)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(Moq.InvocationAction)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.Language.ICallbackGetter&lt;T,TResult&gt;.Callback" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`1&lt;T1&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`2&lt;T1,T2&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`3&lt;T1,T2,T3&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`4&lt;T1,T2,T3,T4&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`5&lt;T1,T2,T3,T4,T5&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`6&lt;T1,T2,T3,T4,T5,T6&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`7&lt;T1,T2,T3,T4,T5,T6,T7&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`8&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.EventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`2&lt;T1,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`3&lt;T1,T2,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`4&lt;T1,T2,T3,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`5&lt;T1,T2,T3,T4,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`6&lt;T1,T2,T3,T4,T5,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`7&lt;T1,T2,T3,T4,T5,T6,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`8&lt;T1,T2,T3,T4,T5,T6,T7,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`17&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(Moq.InvocationFunc)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`2&lt;T1,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`3&lt;T1,T2,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`4&lt;T1,T2,T3,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`5&lt;T1,T2,T3,T4,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`6&lt;T1,T2,T3,T4,T5,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`7&lt;T1,T2,T3,T4,T5,T6,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`8&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`17&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.SetterSetupPhrase`2" filename="/_/src/Moq/Language/Flow/SetterSetupPhrase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.MethodCall)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`1&lt;TProperty&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.SetupPhrase" filename="/_/src/Moq/Language/Flow/SetupPhrase.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Setup" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.MethodCall)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtMost" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtMostOnce" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Callback" signature="(Moq.InvocationAction)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`2&lt;T1,T2&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`3&lt;T1,T2,T3&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`4&lt;T1,T2,T3,T4&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`5&lt;T1,T2,T3,T4,T5&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`6&lt;T1,T2,T3,T4,T5,T6&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`7&lt;T1,T2,T3,T4,T5,T6,T7&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`8&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Action`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Throws" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Throws" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`1&lt;TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`2&lt;T,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`3&lt;T1,T2,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`4&lt;T1,T2,T3,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`5&lt;T1,T2,T3,T4,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`6&lt;T1,T2,T3,T4,T5,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`7&lt;T1,T2,T3,T4,T5,T6,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`8&lt;T1,T2,T3,T4,T5,T6,T7,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`17&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verifiable" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Verifiable" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verifiable" signature="(System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verifiable" signature="(Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verifiable" signature="(System.Func`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verifiable" signature="(Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.SetupSequencePhrase" filename="/_/src/Moq/Language/Flow/SetupSequencePhrase.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(Moq.SequenceSetup)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pass" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Throws" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Throws" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`1&lt;TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.SetupSequencePhrase`1" filename="/_/src/Moq/Language/Flow/SetupSequencePhrase.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(Moq.SequenceSetup)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Returns" signature="(TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Returns" signature="(System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`1&lt;TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.VoidSetupPhrase`1" filename="/_/src/Moq/Language/Flow/VoidSetupPhrase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.MethodCall)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.EventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`2&lt;T1,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`3&lt;T1,T2,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`4&lt;T1,T2,T3,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`5&lt;T1,T2,T3,T4,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`6&lt;T1,T2,T3,T4,T5,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`7&lt;T1,T2,T3,T4,T5,T6,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`8&lt;T1,T2,T3,T4,T5,T6,T7,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`9&lt;T1,T2,T3,T4,T5,T6,T7,T8,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`10&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`11&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`12&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`13&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`14&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`15&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`16&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raises" signature="(System.Action`1&lt;T&gt;,System.Func`17&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,System.EventArgs&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Language.Flow.WhenPhrase`1" filename="/_/src/Moq/Language/Flow/WhenPhrase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.Mock`1&lt;T&gt;,Moq.Condition)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Linq.MockQueryable`1" filename="/_/src/Moq/Linq/MockQuery.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="ElementType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Provider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateQuery" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateQuery" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Linq.MockSetupsBuilder" filename="/_/src/Moq/Linq/MockSetupsBuilder.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="VisitBinary" signature="(System.Linq.Expressions.BinaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitMember" signature="(System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitMethodCall" signature="(System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitUnary" signature="(System.Linq.Expressions.UnaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToSetup" signature="(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToSetupReturns" signature="(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MockObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MockObjectParameter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitMember" signature="(System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitParameter" signature="(System.Linq.Expressions.ParameterExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitUnary" signature="(System.Linq.Expressions.UnaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.LookupOrFallbackDefaultValueProvider" filename="/_/src/Moq/LookupOrFallbackDefaultValueProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Deregister" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(System.Type,System.Func`3&lt;System.Type,Moq.Mock,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultParameterValue" signature="(System.Reflection.ParameterInfo,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultReturnValue" signature="(System.Reflection.MethodInfo,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultValue" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFallbackDefaultValue" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateValueTupleOf" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Match" filename="/_/src/Moq/Match.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="RenderExpression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RenderExpression" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matcher" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Moq.IMatcher.Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Moq.IMatcher.SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Predicate`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Func`3&lt;System.Object,System.Type,System.Boolean&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Register" signature="(Moq.Match)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Match`1" filename="/_/src/Moq/Match.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Condition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Condition" signature="(System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Success" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Success" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Predicate`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;T&gt;&gt;,System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanCast" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Moq.Match`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MatcherFactory" filename="/_/src/Moq/MatcherFactory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateMatchers" signature="(System.Collections.Generic.IReadOnlyList`1&lt;System.Linq.Expressions.Expression&gt;,System.Reflection.ParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMatcher" signature="(System.Linq.Expressions.Expression,System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMatcher" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MatcherObserver" filename="/_/src/Moq/MatcherObserver.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Activate" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="IsActive" signature="(Moq.MatcherObserver&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetNextTimestamp" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMatch" signature="(Moq.Match)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetLastMatch" signature="(Moq.Match&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMatchesBetween" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Moq.Match)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.AnyMatcher" filename="/_/src/Moq/Matchers/AnyMatcher.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.ConstantMatcher" filename="/_/src/Moq/Matchers/ConstantMatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchesEnumerable" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.ExpressionMatcher" filename="/_/src/Moq/Matchers/ExpressionMatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.LazyEvalMatcher" filename="/_/src/Moq/Matchers/LazyEvalMatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.MatcherAttributeMatcher" filename="/_/src/Moq/Matchers/MatcherAttributeMatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveValidatorMethod" signature="(System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.ParamArrayMatcher" filename="/_/src/Moq/Matchers/ParamArrayMatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.IMatcher[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Matchers.RefMatcher" filename="/_/src/Moq/Matchers/RefMatcher.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MatchExpression" filename="/_/src/Moq/MatchExpression.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="NodeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanReduce" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.Match)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitChildren" signature="(System.Linq.Expressions.ExpressionVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MatchFactory" filename="/_/src/Moq/Match.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Func`3&lt;System.Object,System.Type,System.Boolean&gt;,System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanCast" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MethodCall" filename="/_/src/Moq/MethodCall.cs" line-rate="1" branch-rate="1" complexity="21">
          <methods>
            <method name="FailMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Condition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Mock,Moq.Condition,Moq.MethodExpectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetUserCodeCallSite" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="ExecuteCore" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetCallBaseBehavior" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SetCallbackBehavior" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetFailMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetRaiseEventBehavior" signature="(System.Action`1&lt;TMock&gt;,System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetRaiseEventBehavior" signature="(System.Action`1&lt;TMock&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetReturnValueBehavior" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetReturnComputedValueBehavior" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetThrowExceptionBehavior" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetThrowComputedExceptionBehavior" signature="(System.Delegate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetCore" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SetExpectedInvocationCount" signature="(Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySelf" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ValidateNumberOfCallbackParameters" signature="(System.Delegate,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateCallbackReturnType" signature="(System.Reflection.MethodInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="get_InnerMocks" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MethodExpectation" filename="/_/src/Moq/MethodExpectation.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Expression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFrom" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.LambdaExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList`1&lt;System.Linq.Expressions.Expression&gt;,System.Boolean,System.Boolean,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddResultExpression" signature="(System.Func`2&lt;System.Linq.Expressions.Expression,System.Linq.Expressions.Expression&gt;,Moq.Async.IAwaitableFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasResultExpression" signature="(Moq.Async.IAwaitableFactory&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deconstruct" signature="(System.Linq.Expressions.LambdaExpression&amp;,System.Reflection.MethodInfo&amp;,System.Collections.Generic.IReadOnlyList`1&lt;System.Linq.Expressions.Expression&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatch" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupEvaluatedSuccessfully" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOverride" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Moq.Expectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PartiallyEvaluateArguments" signature="(System.Collections.Generic.IReadOnlyList`1&lt;System.Linq.Expressions.Expression&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MethodSetup" filename="/_/src/Moq/MethodSetup.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Mock,Moq.MethodExpectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Mock" filename="/_/src/Moq/Interception/Mock.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Moq.IInterceptor.Intercept" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Mock" filename="/_/src/Moq/Linq/Mock.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Of" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Of" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Mock" filename="/_/src/Moq/Mock.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="DefaultValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValue" signature="(Moq.DefaultValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Object" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invocations" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Get" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(Moq.Mock[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAll" signature="(Moq.Mock[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="VerifyAll" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Verify" signature="(System.Func`2&lt;Moq.ISetup,System.Boolean&gt;,System.Collections.Generic.HashSet`1&lt;Moq.Mock&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyNoOtherCalls" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyNoOtherCalls" signature="(Moq.Mock,System.Collections.Generic.HashSet`1&lt;Moq.Mock&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMatchingInvocationCount" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Collections.Generic.List`1&lt;Moq.Pair`2&lt;Moq.Invocation,Moq.MethodExpectation&gt;&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMatchingInvocationCount" signature="(Moq.Mock,Moq.ImmutablePopOnlyStack`1&lt;Moq.MethodExpectation&gt;&amp;,System.Collections.Generic.HashSet`1&lt;Moq.Mock&gt;,System.Collections.Generic.List`1&lt;Moq.Pair`2&lt;Moq.Invocation,Moq.MethodExpectation&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Condition)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupGet" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Condition)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Condition)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupReturns" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupAdd" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Condition)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupRemove" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,Moq.Condition)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupProperty" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupRecursive" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Func`4&lt;Moq.Mock,System.Linq.Expressions.Expression,Moq.MethodExpectation,TSetup&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupRecursive" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Collections.Generic.Stack`1&lt;Moq.MethodExpectation&gt;,System.Func`4&lt;Moq.Mock,System.Linq.Expressions.Expression,Moq.MethodExpectation,TSetup&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupAllProperties" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaiseEvent" signature="(Moq.Mock,System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaiseEventAsync" signature="(Moq.Mock,System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaiseEvent" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Collections.Generic.Stack`1&lt;Moq.MethodExpectation&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ImplementsInterface" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetReturnsDefault" signature="(TReturn)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultValue" signature="(System.Reflection.MethodInfo,Moq.Mock&amp;,Moq.DefaultValueProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Mock`1" filename="/_/src/Moq/Mock`1.cs" line-rate="1" branch-rate="1" complexity="19">
          <methods>
            <method name="Behavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfiguredDefaultValues" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueProvider" signature="(Moq.DefaultValueProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventHandlers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AdditionalInterfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MutableInvocations" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsObjectInitialized" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Object" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MockedType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MutableSetups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InheritedInterfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Switches" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Switches" signature="(Moq.Switches)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.MockBehavior,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;T&gt;&gt;,Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateUniqueDefaultMockName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CheckParameters" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InitializeInstance" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnGetObject" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="As" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="Setup" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupAdd" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupRemove" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupProperty" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupProperty" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,TProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupAllProperties" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="When" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;,System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;,System.Func`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;,System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,System.Func`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;T&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;T&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(System.Action`1&lt;T&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(System.Action`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(System.Action`1&lt;T&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAdd" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(System.Action`1&lt;T&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;Moq.Times&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(System.Action`1&lt;T&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(System.Action`1&lt;T&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyRemove" signature="(System.Action`1&lt;T&gt;,System.Func`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyNoOtherCalls" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Raise" signature="(System.Action`1&lt;T&gt;,System.EventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raise" signature="(System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaiseAsync" signature="(System.Action`1&lt;T&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Mock`1" filename="/_/src/Moq/Obsolete/Mock.Generic.Legacy.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Expect" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expect" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectSet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectSet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,TProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockDefaultValueProvider" filename="/_/src/Moq/MockDefaultValueProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Kind" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetFallbackDefaultValue" signature="(System.Type,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockException" filename="/_/src/Moq/MockException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Reasons" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsVerificationError" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncorrectNumberOfCalls" signature="(Moq.MethodCall,Moq.Times,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoMatchingCalls" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.String,Moq.Times,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoSetup" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnValueRequired" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnmatchedSetup" signature="(Moq.Setup)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromInnerMockOf" signature="(Moq.ISetup,Moq.MockException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Combined" signature="(System.Collections.Generic.IEnumerable`1&lt;Moq.MockException&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnverifiedInvocations" signature="(Moq.Mock,System.Collections.Generic.IEnumerable`1&lt;Moq.Invocation&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.MockExceptionReasons,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockExtensions" filename="/_/src/Moq/MockExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Reset" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockExtensions" filename="/_/src/Moq/Obsolete/MockExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ResetCalls" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockFactory" filename="/_/src/Moq/Obsolete/MockFactory.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="Behavior" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CallBase" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValue" signature="(Moq.DefaultValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultValueProvider" signature="(Moq.DefaultValueProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mocks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Switches" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Switches" signature="(Moq.Switches)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Create" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(Moq.MockBehavior,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;T&gt;&gt;,Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMock" signature="(Moq.MockBehavior,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="VerifyAll" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="VerifyNoOtherCalls" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="VerifyMocks" signature="(System.Action`1&lt;Moq.Mock&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockLegacyExtensions" filename="/_/src/Moq/Obsolete/Mock.Generic.Legacy.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SetupSet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,TProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,TProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,TProperty,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockRepository" filename="/_/src/Moq/Linq/MockRepository.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Of" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Of" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OneOf" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneOf" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneOf" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMockQuery" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateQueryable" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMocks" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockRepository" filename="/_/src/Moq/MockRepository.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Mocks" filename="/_/src/Moq/Linq/Mocks.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Of" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Of" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OneOf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OneOf" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMockQuery" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateQueryable" signature="(Moq.MockBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMocks" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockSequence" filename="/_/src/Moq/MockSequence.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Cyclic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Cyclic" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextStep" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="For" signature="(Moq.Mock`1&lt;TMock&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.MockSequenceHelper" filename="/_/src/Moq/MockSequence.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="InSequence" signature="(Moq.Mock`1&lt;TMock&gt;,Moq.MockSequence)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ObsoleteMockExtensions" filename="/_/src/Moq/Obsolete/ObsoleteMockExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SetupSet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(Moq.Mock`1&lt;T&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TProperty&gt;&gt;,Moq.Times,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Pair`2" filename="/_/src/Moq/Pair.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name=".ctor" signature="(T1,T2)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deconstruct" signature="(T1&amp;,T2&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Moq.Pair`2&lt;T1,T2&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ParameterTypes" filename="/_/src/Moq/ParameterTypes.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.ParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Protected.ItExpr" filename="/_/src/Moq/Protected/ItExpr.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="IsNull" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsAny" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Is" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TValue,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInRange" signature="(TValue,TValue,Moq.Range)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegex" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRegex" signature="(System.String,System.Text.RegularExpressions.RegexOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAny" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Protected.ProtectedAsMock`2" filename="/_/src/Moq/Protected/ProtectedAsMock.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Moq.Mock`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;TAnalog&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAnalog,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.Action`1&lt;TAnalog&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.Action`1&lt;TAnalog&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAnalog,TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupProperty" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAnalog,TProperty&gt;&gt;,TProperty)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAnalog,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;TAnalog&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;TAnalog&gt;&gt;,System.Nullable`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAnalog,TResult&gt;&gt;,System.Nullable`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.Action`1&lt;TAnalog&gt;,System.Nullable`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAnalog,TProperty&gt;&gt;,System.Nullable`1&lt;Moq.Times&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReconstructAndReplaceSetter" signature="(System.Action`1&lt;TAnalog&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReplaceDuck" signature="(System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitMethodCall" signature="(System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitIndex" signature="(System.Linq.Expressions.IndexExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitMember" signature="(System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindCorrespondingMember" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindCorrespondingMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindCorrespondingProperty" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCorrespondingMethod" signature="(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCorrespondingProperty" signature="(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Protected.ProtectedExtension" filename="/_/src/Moq/Protected/ProtectedExtension.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Protected" signature="(Moq.Mock`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Protected.ProtectedMock`1" filename="/_/src/Moq/Protected/ProtectedMock.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="(Moq.Mock`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="As" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Setup" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.String,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalSetup" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.String,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalSetup" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupGet" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSet" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.String,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalSetupSequence" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.String,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalSetupSequence" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,Moq.Times,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,System.Type[],Moq.Times,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,Moq.Times,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,System.Type[],Moq.Times,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalVerify" signature="(System.String,System.Type[],Moq.Times,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,Moq.Times,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,System.Type[],Moq.Times,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,Moq.Times,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Verify" signature="(System.String,System.Type[],Moq.Times,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalVerify" signature="(System.String,System.Type[],Moq.Times,System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyGet" signature="(System.String,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySet" signature="(System.String,Moq.Times,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMemberAccess" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethod" signature="(System.String,System.Type[],System.Boolean,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodCall" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodCall" signature="(System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSetterExpression" signature="(System.Reflection.PropertyInfo,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfMemberMissing" signature="(System.String,System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfMethodMissing" signature="(System.String,System.Reflection.MethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfPublicMethod" signature="(System.Reflection.MethodInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfPublicGetter" signature="(System.Reflection.PropertyInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfPublicSetter" signature="(System.Reflection.PropertyInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfVoidMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToArgTypes" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsItRefAny" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ItRefAnyField" signature="(System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToExpressionArg" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToExpressionArgs" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ProxyFactory" filename="/_/src/Moq/Interception/ProxyFactory.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Instance" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.RecordInvocation" filename="/_/src/Moq/Interception/InterceptionAspects.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Handle" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Return" filename="/_/src/Moq/Interception/InterceptionAspects.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Handle" signature="(Moq.Invocation,Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.ReturnsExtensions" filename="/_/src/Moq/ReturnsExtensions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan,System.TimeSpan,System.Random)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan,System.TimeSpan,System.Random)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan,System.TimeSpan,System.Random)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan,System.TimeSpan,System.Random)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullResult" signature="(System.Delegate,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDelay" signature="(System.TimeSpan,System.TimeSpan,System.Random)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelayedResult" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelayedResult" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,TResult,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelayedException" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelayedException" signature="(Moq.Language.IReturns`2&lt;TMock,System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Exception,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.SequenceExtensions" filename="/_/src/Moq/Obsolete/SequenceExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SetupSequence" signature="(Moq.Mock`1&lt;TMock&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TMock,TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetupSequence" signature="(Moq.Mock`1&lt;TMock&gt;,System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;TMock&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.SequenceExtensions" filename="/_/src/Moq/SequenceExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ReturnsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,TResult)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PassAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PassAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.ValueTask&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.ValueTask`1&lt;TResult&gt;&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.Task&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="(Moq.Language.ISetupSequentialResult`1&lt;System.Threading.Tasks.ValueTask&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.SequenceSetup" filename="/_/src/Moq/SequenceSetup.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Mock,Moq.MethodExpectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddBehavior" signature="(Moq.Behavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteCore" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Setup" filename="/_/src/Moq/Setup.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Condition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expectation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ISetup.get_InnerMock" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerMocks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsConditional" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsOverridden" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsVerifiable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mock" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OriginalExpression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatched" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Mock,Moq.Expectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MarkAsOverridden" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MarkAsVerifiable" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Matches" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(Moq.MethodExpectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetOutParameters" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Verify" signature="(System.Boolean,System.Func`2&lt;Moq.ISetup,System.Boolean&gt;,System.Collections.Generic.HashSet`1&lt;Moq.Mock&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySelf" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResetCore" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Verify" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifyAll" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Verify" signature="(System.Boolean,System.Func`2&lt;Moq.ISetup,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetInnerMockFrom" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.SetupCollection" filename="/_/src/Moq/SetupCollection.cs" line-rate="1" branch-rate="1" complexity="14">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(Moq.Setup)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MarkOverriddenSetups" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="FindAll" signature="(System.Func`2&lt;Moq.Setup,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindLast" signature="(System.Func`2&lt;Moq.Setup,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.SetupWithOutParameterSupport" filename="/_/src/Moq/SetupWithOutParameterSupport.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression,Moq.Mock,Moq.MethodExpectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetOutParameters" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOutValues" signature="(System.Collections.Generic.IReadOnlyList`1&lt;System.Linq.Expressions.Expression&gt;,System.Reflection.ParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.StringBuilderExtensions" filename="/_/src/Moq/StringBuilderExtensions.AppendExpression.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.Expression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendElementInit" signature="(System.Text.StringBuilder,System.Linq.Expressions.ElementInit)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.UnaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.BinaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.TypeBinaryExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.ConditionalExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.ParameterExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.MemberExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.MethodCallExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.IndexExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.LambdaExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.NewExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.NewArrayExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.InvocationExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.MemberInitExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,System.Linq.Expressions.ListInitExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendExpression" signature="(System.Text.StringBuilder,Moq.MatchExpression)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.StringBuilderExtensions" filename="/_/src/Moq/StringBuilderExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Append" signature="(System.Text.StringBuilder,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendCommaSeparated" signature="(System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Func`3&lt;System.Text.StringBuilder,T,System.Text.StringBuilder&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendCommaSeparated" signature="(System.Text.StringBuilder,System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Func`3&lt;System.Text.StringBuilder,T,System.Text.StringBuilder&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendIndented" signature="(System.Text.StringBuilder,System.String,System.Int32,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendNameOf" signature="(System.Text.StringBuilder,System.Reflection.MethodBase,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendNameOf" signature="(System.Text.StringBuilder,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendParameterType" signature="(System.Text.StringBuilder,System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendValueOf" signature="(System.Text.StringBuilder,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrimEnd" signature="(System.Text.StringBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.StubbedPropertiesSetup" filename="/_/src/Moq/StubbedPropertiesSetup.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="DefaultValueProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.Mock,Moq.DefaultValueProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetProperty" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteCore" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VerifySelf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Expression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Moq.Mock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Moq.Expectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsMatch" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="get_InnerMocks" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.StubbedPropertySetup" filename="/_/src/Moq/StubbedPropertySetup.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name=".ctor" signature="(Moq.Mock,System.Linq.Expressions.LambdaExpression,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteCore" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="VerifySelf" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Expression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.LambdaExpression,System.Reflection.MethodInfo,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Moq.Expectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="IsMatch" signature="(Moq.Invocation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="get_InnerMocks" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.Times" filename="/_/src/Moq/Times.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name=".ctor" signature="(Moq.Times/Kind,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deconstruct" signature="(System.Int32&amp;,System.Int32&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtLeast" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtLeastOnce" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AtMost" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AtMostOnce" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Between" signature="(System.Int32,System.Int32,Moq.Range)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exactly" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Never" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Once" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Equals" signature="(Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Equality" signature="(Moq.Times,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Inequality" signature="(Moq.Times,Moq.Times)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
            <method name="GetExceptionMessage" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Validate" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Moq.TypeMatcherAttribute" filename="/_/src/Moq/TypeMatcherAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="PowerPoint" line-rate="0.505073280721533" branch-rate="0.702898550724638" complexity="178">
      <classes>
        <class name="PowerPoint.CommandManager" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\CommandManager.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="IsRedoEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
              </lines>
            </method>
            <method name="IsUndoEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="57" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Execute" signature="(PowerPoint.ICommand)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="18" hits="8" branch="false" />
                <line number="19" hits="8" branch="false" />
                <line number="20" hits="8" branch="false" />
                <line number="21" hits="8" branch="false" />
                <line number="22" hits="8" branch="false" />
              </lines>
            </method>
            <method name="Undo" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="26" hits="3" branch="false" />
                <line number="27" hits="3" branch="true" condition-coverage="100% (2/2)" />
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="2" branch="false" />
                <line number="30" hits="2" branch="false" />
                <line number="31" hits="2" branch="false" />
                <line number="32" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Redo" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="36" hits="2" branch="false" />
                <line number="37" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="61" branch="false" />
                <line number="12" hits="61" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="61" branch="false" />
            <line number="12" hits="61" branch="false" />
            <line number="18" hits="8" branch="false" />
            <line number="19" hits="8" branch="false" />
            <line number="20" hits="8" branch="false" />
            <line number="21" hits="8" branch="false" />
            <line number="22" hits="8" branch="false" />
            <line number="26" hits="3" branch="false" />
            <line number="27" hits="3" branch="true" condition-coverage="100% (2/2)" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="2" branch="false" />
            <line number="30" hits="2" branch="false" />
            <line number="31" hits="2" branch="false" />
            <line number="32" hits="2" branch="false" />
            <line number="36" hits="2" branch="false" />
            <line number="37" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="57" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.DrawCommand" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\DrawCommand.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(PowerPoint.Model,PowerPoint.Shape)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="14" hits="8" branch="false" />
                <line number="15" hits="8" branch="false" />
                <line number="16" hits="8" branch="false" />
                <line number="17" hits="8" branch="false" />
                <line number="18" hits="8" branch="false" />
              </lines>
            </method>
            <method name="Execute" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="22" hits="9" branch="false" />
                <line number="23" hits="9" branch="false" />
                <line number="24" hits="9" branch="false" />
              </lines>
            </method>
            <method name="RedoExecution" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="2" branch="false" />
                <line number="29" hits="2" branch="false" />
                <line number="30" hits="2" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="8" branch="false" />
            <line number="15" hits="8" branch="false" />
            <line number="16" hits="8" branch="false" />
            <line number="17" hits="8" branch="false" />
            <line number="18" hits="8" branch="false" />
            <line number="22" hits="9" branch="false" />
            <line number="23" hits="9" branch="false" />
            <line number="24" hits="9" branch="false" />
            <line number="28" hits="2" branch="false" />
            <line number="29" hits="2" branch="false" />
            <line number="30" hits="2" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.DrawingState" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\DrawingState.cs" line-rate="0.975" branch-rate="0.95" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(PowerPoint.Model)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="16" branch="false" />
                <line number="14" hits="16" branch="false" />
                <line number="15" hits="16" branch="false" />
                <line number="18" hits="16" branch="false" />
                <line number="19" hits="16" branch="false" />
                <line number="20" hits="16" branch="false" />
                <line number="21" hits="16" branch="false" />
              </lines>
            </method>
            <method name="ClickMouse" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
              </lines>
            </method>
            <method name="PressMouse" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="30" hits="4" branch="false" />
                <line number="31" hits="4" branch="false" />
                <line number="32" hits="4" branch="false" />
                <line number="33" hits="4" branch="true" condition-coverage="100% (4/4)" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="4" branch="false" />
              </lines>
            </method>
            <method name="MoveMouse" signature="(System.Double,System.Double)" line-rate="0.875" branch-rate="0.875" complexity="NaN">
              <lines>
                <line number="43" hits="5" branch="false" />
                <line number="44" hits="5" branch="true" condition-coverage="100% (6/6)" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="47" hits="1" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="5" branch="false" />
              </lines>
            </method>
            <method name="ReleaseMouse" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="55" hits="4" branch="false" />
                <line number="56" hits="4" branch="false" />
                <line number="57" hits="4" branch="true" condition-coverage="100% (6/6)" />
                <line number="58" hits="2" branch="false" />
                <line number="59" hits="2" branch="false" />
                <line number="60" hits="2" branch="false" />
                <line number="61" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="62" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
                <line number="65" hits="2" branch="false" />
                <line number="66" hits="2" branch="false" />
                <line number="67" hits="4" branch="false" />
                <line number="68" hits="4" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="16" branch="false" />
            <line number="14" hits="16" branch="false" />
            <line number="15" hits="16" branch="false" />
            <line number="18" hits="16" branch="false" />
            <line number="19" hits="16" branch="false" />
            <line number="20" hits="16" branch="false" />
            <line number="21" hits="16" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="30" hits="4" branch="false" />
            <line number="31" hits="4" branch="false" />
            <line number="32" hits="4" branch="false" />
            <line number="33" hits="4" branch="true" condition-coverage="100% (4/4)" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="4" branch="false" />
            <line number="43" hits="5" branch="false" />
            <line number="44" hits="5" branch="true" condition-coverage="100% (6/6)" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="47" hits="1" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="5" branch="false" />
            <line number="55" hits="4" branch="false" />
            <line number="56" hits="4" branch="false" />
            <line number="57" hits="4" branch="true" condition-coverage="100% (6/6)" />
            <line number="58" hits="2" branch="false" />
            <line number="59" hits="2" branch="false" />
            <line number="60" hits="2" branch="false" />
            <line number="61" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="62" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="65" hits="2" branch="false" />
            <line number="66" hits="2" branch="false" />
            <line number="67" hits="4" branch="false" />
            <line number="68" hits="4" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Ellipse" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\Ellipse.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="4" branch="false" />
                <line number="12" hits="4" branch="false" />
                <line number="14" hits="4" branch="false" />
                <line number="15" hits="4" branch="false" />
              </lines>
            </method>
            <method name="Draw" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DrawRed" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="4" branch="false" />
            <line number="12" hits="4" branch="false" />
            <line number="14" hits="4" branch="false" />
            <line number="15" hits="4" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Factory" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\Factory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateInformation" signature="(PowerPoint.Factory/ShapeType,PowerPoint.Shape)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="26" hits="9" branch="false" />
                <line number="31" hits="9" branch="false" />
                <line number="32" hits="9" branch="false" />
                <line number="33" hits="54" branch="true" condition-coverage="100% (2/2)" />
                <line number="34" hits="18" branch="false" />
                <line number="35" hits="18" branch="false" />
                <line number="36" hits="18" branch="false" />
                <line number="37" hits="18" branch="false" />
                <line number="38" hits="9" branch="false" />
                <line number="39" hits="9" branch="false" />
                <line number="40" hits="9" branch="false" />
              </lines>
            </method>
            <method name="CreateShape" signature="(PowerPoint.Factory/ShapeType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="44" hits="17" branch="false" />
                <line number="45" hits="17" branch="true" condition-coverage="100% (2/2)" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="49" hits="16" branch="true" condition-coverage="100% (2/2)" />
                <line number="50" hits="13" branch="false" />
                <line number="51" hits="13" branch="false" />
                <line number="53" hits="3" branch="true" condition-coverage="100% (2/2)" />
                <line number="54" hits="2" branch="false" />
                <line number="55" hits="2" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="61" hits="17" branch="false" />
              </lines>
            </method>
            <method name="AddShapeButton" signature="(PowerPoint.Factory/ShapeType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="65" hits="10" branch="false" />
                <line number="66" hits="10" branch="true" condition-coverage="100% (2/2)" />
                <line number="67" hits="7" branch="false" />
                <line number="68" hits="7" branch="false" />
                <line number="69" hits="7" branch="false" />
                <line number="70" hits="7" branch="false" />
                <line number="72" hits="3" branch="false" />
                <line number="73" hits="10" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="26" hits="9" branch="false" />
            <line number="31" hits="9" branch="false" />
            <line number="32" hits="9" branch="false" />
            <line number="33" hits="54" branch="true" condition-coverage="100% (2/2)" />
            <line number="34" hits="18" branch="false" />
            <line number="35" hits="18" branch="false" />
            <line number="36" hits="18" branch="false" />
            <line number="37" hits="18" branch="false" />
            <line number="38" hits="9" branch="false" />
            <line number="39" hits="9" branch="false" />
            <line number="40" hits="9" branch="false" />
            <line number="44" hits="17" branch="false" />
            <line number="45" hits="17" branch="true" condition-coverage="100% (2/2)" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="49" hits="16" branch="true" condition-coverage="100% (2/2)" />
            <line number="50" hits="13" branch="false" />
            <line number="51" hits="13" branch="false" />
            <line number="53" hits="3" branch="true" condition-coverage="100% (2/2)" />
            <line number="54" hits="2" branch="false" />
            <line number="55" hits="2" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="61" hits="17" branch="false" />
            <line number="65" hits="10" branch="false" />
            <line number="66" hits="10" branch="true" condition-coverage="100% (2/2)" />
            <line number="67" hits="7" branch="false" />
            <line number="68" hits="7" branch="false" />
            <line number="69" hits="7" branch="false" />
            <line number="70" hits="7" branch="false" />
            <line number="72" hits="3" branch="false" />
            <line number="73" hits="10" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Form1" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Form1.cs" line-rate="0" branch-rate="0" complexity="3">
          <methods>
            <method name="_bindingManager" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="52" hits="0" branch="false" />
                <line number="53" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="0" branch="false" />
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="26" hits="0" branch="false" />
                <line number="27" hits="0" branch="false" />
                <line number="28" hits="0" branch="false" />
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="false" />
                <line number="31" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="33" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="35" hits="0" branch="false" />
                <line number="36" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
                <line number="38" hits="0" branch="false" />
                <line number="39" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
                <line number="41" hits="0" branch="false" />
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
                <line number="45" hits="0" branch="false" />
                <line number="46" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
              </lines>
            </method>
            <method name="OnPaint" signature="(System.Windows.Forms.PaintEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickAddShapeButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="67" hits="0" branch="false" />
                <line number="68" hits="0" branch="false" />
                <line number="69" hits="0" branch="false" />
                <line number="70" hits="0" branch="false" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
                <line number="73" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickDeleteShapeButton" signature="(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="77" hits="0" branch="false" />
                <line number="78" hits="0" branch="false" />
                <line number="79" hits="0" branch="false" />
                <line number="80" hits="0" branch="false" />
                <line number="81" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickLineShapeButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="85" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="87" hits="0" branch="false" />
                <line number="88" hits="0" branch="false" />
                <line number="89" hits="0" branch="false" />
                <line number="90" hits="0" branch="false" />
                <line number="91" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickRectangleShapeButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="95" hits="0" branch="false" />
                <line number="96" hits="0" branch="false" />
                <line number="97" hits="0" branch="false" />
                <line number="98" hits="0" branch="false" />
                <line number="99" hits="0" branch="false" />
                <line number="100" hits="0" branch="false" />
                <line number="101" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickEllipseShapeButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="105" hits="0" branch="false" />
                <line number="106" hits="0" branch="false" />
                <line number="107" hits="0" branch="false" />
                <line number="108" hits="0" branch="false" />
                <line number="109" hits="0" branch="false" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickArrowShapeButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="115" hits="0" branch="false" />
                <line number="116" hits="0" branch="false" />
                <line number="117" hits="0" branch="false" />
                <line number="118" hits="0" branch="false" />
                <line number="119" hits="0" branch="false" />
              </lines>
            </method>
            <method name="PressDrawPictureBox" signature="(System.Object,System.Windows.Forms.MouseEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="123" hits="0" branch="false" />
                <line number="124" hits="0" branch="false" />
                <line number="125" hits="0" branch="false" />
                <line number="126" hits="0" branch="false" />
              </lines>
            </method>
            <method name="MoveMouseOnDrawPictureBox" signature="(System.Object,System.Windows.Forms.MouseEventArgs)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="130" hits="0" branch="false" />
                <line number="131" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="132" hits="0" branch="false" />
                <line number="133" hits="0" branch="false" />
                <line number="134" hits="0" branch="false" />
                <line number="135" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ReleaseDrawPictureBox" signature="(System.Object,System.Windows.Forms.MouseEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="139" hits="0" branch="false" />
                <line number="140" hits="0" branch="false" />
                <line number="141" hits="0" branch="false" />
                <line number="142" hits="0" branch="false" />
                <line number="143" hits="0" branch="false" />
                <line number="144" hits="0" branch="false" />
                <line number="145" hits="0" branch="false" />
                <line number="146" hits="0" branch="false" />
              </lines>
            </method>
            <method name="CheckToolStripButton" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="150" hits="0" branch="false" />
                <line number="151" hits="0" branch="false" />
                <line number="152" hits="0" branch="false" />
                <line number="153" hits="0" branch="false" />
                <line number="154" hits="0" branch="false" />
                <line number="155" hits="0" branch="false" />
              </lines>
            </method>
            <method name="HandleModelChanged" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="159" hits="0" branch="false" />
                <line number="160" hits="0" branch="false" />
                <line number="161" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickDrawPictureBox" signature="(System.Object,System.Windows.Forms.MouseEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="165" hits="0" branch="false" />
                <line number="166" hits="0" branch="false" />
                <line number="167" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickDeleteKey" signature="(System.Object,System.Windows.Forms.KeyEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="171" hits="0" branch="false" />
                <line number="172" hits="0" branch="false" />
                <line number="173" hits="0" branch="false" />
                <line number="174" hits="0" branch="false" />
                <line number="175" hits="0" branch="false" />
              </lines>
            </method>
            <method name="RefreshUi" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="179" hits="0" branch="false" />
                <line number="180" hits="0" branch="false" />
                <line number="181" hits="0" branch="false" />
                <line number="182" hits="0" branch="false" />
                <line number="183" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickUndoToolStripButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="187" hits="0" branch="false" />
                <line number="188" hits="0" branch="false" />
                <line number="189" hits="0" branch="false" />
                <line number="190" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClickRedoToolStripButton" signature="(System.Object,System.EventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="194" hits="0" branch="false" />
                <line number="195" hits="0" branch="false" />
                <line number="196" hits="0" branch="false" />
                <line number="197" hits="0" branch="false" />
              </lines>
            </method>
            <method name="MoveRightSplitContainer" signature="(System.Object,System.Windows.Forms.SplitterEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="201" hits="0" branch="false" />
                <line number="202" hits="0" branch="false" />
                <line number="203" hits="0" branch="false" />
                <line number="204" hits="0" branch="false" />
              </lines>
            </method>
            <method name="MoveLeftSplitContainer" signature="(System.Object,System.Windows.Forms.SplitterEventArgs)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="208" hits="0" branch="false" />
                <line number="209" hits="0" branch="false" />
                <line number="210" hits="0" branch="false" />
                <line number="211" hits="0" branch="false" />
                <line number="212" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="19" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="26" hits="0" branch="false" />
            <line number="27" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="35" hits="0" branch="false" />
            <line number="36" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="38" hits="0" branch="false" />
            <line number="39" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="41" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="45" hits="0" branch="false" />
            <line number="46" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="53" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="67" hits="0" branch="false" />
            <line number="68" hits="0" branch="false" />
            <line number="69" hits="0" branch="false" />
            <line number="70" hits="0" branch="false" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="73" hits="0" branch="false" />
            <line number="77" hits="0" branch="false" />
            <line number="78" hits="0" branch="false" />
            <line number="79" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="81" hits="0" branch="false" />
            <line number="85" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="87" hits="0" branch="false" />
            <line number="88" hits="0" branch="false" />
            <line number="89" hits="0" branch="false" />
            <line number="90" hits="0" branch="false" />
            <line number="91" hits="0" branch="false" />
            <line number="95" hits="0" branch="false" />
            <line number="96" hits="0" branch="false" />
            <line number="97" hits="0" branch="false" />
            <line number="98" hits="0" branch="false" />
            <line number="99" hits="0" branch="false" />
            <line number="100" hits="0" branch="false" />
            <line number="101" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="106" hits="0" branch="false" />
            <line number="107" hits="0" branch="false" />
            <line number="108" hits="0" branch="false" />
            <line number="109" hits="0" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="115" hits="0" branch="false" />
            <line number="116" hits="0" branch="false" />
            <line number="117" hits="0" branch="false" />
            <line number="118" hits="0" branch="false" />
            <line number="119" hits="0" branch="false" />
            <line number="123" hits="0" branch="false" />
            <line number="124" hits="0" branch="false" />
            <line number="125" hits="0" branch="false" />
            <line number="126" hits="0" branch="false" />
            <line number="130" hits="0" branch="false" />
            <line number="131" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="132" hits="0" branch="false" />
            <line number="133" hits="0" branch="false" />
            <line number="134" hits="0" branch="false" />
            <line number="135" hits="0" branch="false" />
            <line number="139" hits="0" branch="false" />
            <line number="140" hits="0" branch="false" />
            <line number="141" hits="0" branch="false" />
            <line number="142" hits="0" branch="false" />
            <line number="143" hits="0" branch="false" />
            <line number="144" hits="0" branch="false" />
            <line number="145" hits="0" branch="false" />
            <line number="146" hits="0" branch="false" />
            <line number="150" hits="0" branch="false" />
            <line number="151" hits="0" branch="false" />
            <line number="152" hits="0" branch="false" />
            <line number="153" hits="0" branch="false" />
            <line number="154" hits="0" branch="false" />
            <line number="155" hits="0" branch="false" />
            <line number="159" hits="0" branch="false" />
            <line number="160" hits="0" branch="false" />
            <line number="161" hits="0" branch="false" />
            <line number="165" hits="0" branch="false" />
            <line number="166" hits="0" branch="false" />
            <line number="167" hits="0" branch="false" />
            <line number="171" hits="0" branch="false" />
            <line number="172" hits="0" branch="false" />
            <line number="173" hits="0" branch="false" />
            <line number="174" hits="0" branch="false" />
            <line number="175" hits="0" branch="false" />
            <line number="179" hits="0" branch="false" />
            <line number="180" hits="0" branch="false" />
            <line number="181" hits="0" branch="false" />
            <line number="182" hits="0" branch="false" />
            <line number="183" hits="0" branch="false" />
            <line number="187" hits="0" branch="false" />
            <line number="188" hits="0" branch="false" />
            <line number="189" hits="0" branch="false" />
            <line number="190" hits="0" branch="false" />
            <line number="194" hits="0" branch="false" />
            <line number="195" hits="0" branch="false" />
            <line number="196" hits="0" branch="false" />
            <line number="197" hits="0" branch="false" />
            <line number="201" hits="0" branch="false" />
            <line number="202" hits="0" branch="false" />
            <line number="203" hits="0" branch="false" />
            <line number="204" hits="0" branch="false" />
            <line number="208" hits="0" branch="false" />
            <line number="209" hits="0" branch="false" />
            <line number="210" hits="0" branch="false" />
            <line number="211" hits="0" branch="false" />
            <line number="212" hits="0" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Form1" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Form1.Designer.cs" line-rate="0" branch-rate="0" complexity="1">
          <methods>
            <method name="Dispose" signature="(System.Boolean)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
                <line number="22" hits="0" branch="false" />
              </lines>
            </method>
            <method name="InitializeComponent" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="31" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="33" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="35" hits="0" branch="false" />
                <line number="36" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
                <line number="38" hits="0" branch="false" />
                <line number="39" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
                <line number="41" hits="0" branch="false" />
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
                <line number="45" hits="0" branch="false" />
                <line number="46" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
                <line number="48" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="53" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
                <line number="55" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="58" hits="0" branch="false" />
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
                <line number="64" hits="0" branch="false" />
                <line number="65" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="67" hits="0" branch="false" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
                <line number="73" hits="0" branch="false" />
                <line number="74" hits="0" branch="false" />
                <line number="75" hits="0" branch="false" />
                <line number="76" hits="0" branch="false" />
                <line number="77" hits="0" branch="false" />
                <line number="78" hits="0" branch="false" />
                <line number="79" hits="0" branch="false" />
                <line number="80" hits="0" branch="false" />
                <line number="81" hits="0" branch="false" />
                <line number="82" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="87" hits="0" branch="false" />
                <line number="88" hits="0" branch="false" />
                <line number="89" hits="0" branch="false" />
                <line number="90" hits="0" branch="false" />
                <line number="91" hits="0" branch="false" />
                <line number="92" hits="0" branch="false" />
                <line number="93" hits="0" branch="false" />
                <line number="94" hits="0" branch="false" />
                <line number="98" hits="0" branch="false" />
                <line number="99" hits="0" branch="false" />
                <line number="100" hits="0" branch="false" />
                <line number="101" hits="0" branch="false" />
                <line number="102" hits="0" branch="false" />
                <line number="103" hits="0" branch="false" />
                <line number="104" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="109" hits="0" branch="false" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="112" hits="0" branch="false" />
                <line number="113" hits="0" branch="false" />
                <line number="114" hits="0" branch="false" />
                <line number="115" hits="0" branch="false" />
                <line number="116" hits="0" branch="false" />
                <line number="117" hits="0" branch="false" />
                <line number="118" hits="0" branch="false" />
                <line number="119" hits="0" branch="false" />
                <line number="120" hits="0" branch="false" />
                <line number="124" hits="0" branch="false" />
                <line number="125" hits="0" branch="false" />
                <line number="126" hits="0" branch="false" />
                <line number="127" hits="0" branch="false" />
                <line number="128" hits="0" branch="false" />
                <line number="129" hits="0" branch="false" />
                <line number="130" hits="0" branch="false" />
                <line number="131" hits="0" branch="false" />
                <line number="132" hits="0" branch="false" />
                <line number="133" hits="0" branch="false" />
                <line number="134" hits="0" branch="false" />
                <line number="138" hits="0" branch="false" />
                <line number="139" hits="0" branch="false" />
                <line number="140" hits="0" branch="false" />
                <line number="141" hits="0" branch="false" />
                <line number="142" hits="0" branch="false" />
                <line number="146" hits="0" branch="false" />
                <line number="147" hits="0" branch="false" />
                <line number="148" hits="0" branch="false" />
                <line number="152" hits="0" branch="false" />
                <line number="153" hits="0" branch="false" />
                <line number="154" hits="0" branch="false" />
                <line number="155" hits="0" branch="false" />
                <line number="156" hits="0" branch="false" />
                <line number="157" hits="0" branch="false" />
                <line number="158" hits="0" branch="false" />
                <line number="159" hits="0" branch="false" />
                <line number="163" hits="0" branch="false" />
                <line number="167" hits="0" branch="false" />
                <line number="168" hits="0" branch="false" />
                <line number="169" hits="0" branch="false" />
                <line number="170" hits="0" branch="false" />
                <line number="171" hits="0" branch="false" />
                <line number="172" hits="0" branch="false" />
                <line number="173" hits="0" branch="false" />
                <line number="174" hits="0" branch="false" />
                <line number="175" hits="0" branch="false" />
                <line number="179" hits="0" branch="false" />
                <line number="180" hits="0" branch="false" />
                <line number="181" hits="0" branch="false" />
                <line number="182" hits="0" branch="false" />
                <line number="183" hits="0" branch="false" />
                <line number="184" hits="0" branch="false" />
                <line number="185" hits="0" branch="false" />
                <line number="186" hits="0" branch="false" />
                <line number="187" hits="0" branch="false" />
                <line number="188" hits="0" branch="false" />
                <line number="189" hits="0" branch="false" />
                <line number="190" hits="0" branch="false" />
                <line number="191" hits="0" branch="false" />
                <line number="192" hits="0" branch="false" />
                <line number="196" hits="0" branch="false" />
                <line number="197" hits="0" branch="false" />
                <line number="198" hits="0" branch="false" />
                <line number="199" hits="0" branch="false" />
                <line number="200" hits="0" branch="false" />
                <line number="201" hits="0" branch="false" />
                <line number="202" hits="0" branch="false" />
                <line number="203" hits="0" branch="false" />
                <line number="204" hits="0" branch="false" />
                <line number="205" hits="0" branch="false" />
                <line number="206" hits="0" branch="false" />
                <line number="207" hits="0" branch="false" />
                <line number="208" hits="0" branch="false" />
                <line number="209" hits="0" branch="false" />
                <line number="210" hits="0" branch="false" />
                <line number="214" hits="0" branch="false" />
                <line number="215" hits="0" branch="false" />
                <line number="216" hits="0" branch="false" />
                <line number="217" hits="0" branch="false" />
                <line number="218" hits="0" branch="false" />
                <line number="219" hits="0" branch="false" />
                <line number="223" hits="0" branch="false" />
                <line number="224" hits="0" branch="false" />
                <line number="225" hits="0" branch="false" />
                <line number="226" hits="0" branch="false" />
                <line number="227" hits="0" branch="false" />
                <line number="228" hits="0" branch="false" />
                <line number="232" hits="0" branch="false" />
                <line number="233" hits="0" branch="false" />
                <line number="234" hits="0" branch="false" />
                <line number="235" hits="0" branch="false" />
                <line number="236" hits="0" branch="false" />
                <line number="237" hits="0" branch="false" />
                <line number="241" hits="0" branch="false" />
                <line number="242" hits="0" branch="false" />
                <line number="243" hits="0" branch="false" />
                <line number="244" hits="0" branch="false" />
                <line number="245" hits="0" branch="false" />
                <line number="246" hits="0" branch="false" />
                <line number="250" hits="0" branch="false" />
                <line number="251" hits="0" branch="false" />
                <line number="252" hits="0" branch="false" />
                <line number="253" hits="0" branch="false" />
                <line number="254" hits="0" branch="false" />
                <line number="255" hits="0" branch="false" />
                <line number="259" hits="0" branch="false" />
                <line number="260" hits="0" branch="false" />
                <line number="261" hits="0" branch="false" />
                <line number="262" hits="0" branch="false" />
                <line number="263" hits="0" branch="false" />
                <line number="264" hits="0" branch="false" />
                <line number="268" hits="0" branch="false" />
                <line number="269" hits="0" branch="false" />
                <line number="270" hits="0" branch="false" />
                <line number="271" hits="0" branch="false" />
                <line number="272" hits="0" branch="false" />
                <line number="273" hits="0" branch="false" />
                <line number="277" hits="0" branch="false" />
                <line number="281" hits="0" branch="false" />
                <line number="282" hits="0" branch="false" />
                <line number="283" hits="0" branch="false" />
                <line number="284" hits="0" branch="false" />
                <line number="285" hits="0" branch="false" />
                <line number="286" hits="0" branch="false" />
                <line number="290" hits="0" branch="false" />
                <line number="291" hits="0" branch="false" />
                <line number="292" hits="0" branch="false" />
                <line number="293" hits="0" branch="false" />
                <line number="294" hits="0" branch="false" />
                <line number="295" hits="0" branch="false" />
                <line number="299" hits="0" branch="false" />
                <line number="303" hits="0" branch="false" />
                <line number="304" hits="0" branch="false" />
                <line number="305" hits="0" branch="false" />
                <line number="306" hits="0" branch="false" />
                <line number="307" hits="0" branch="false" />
                <line number="308" hits="0" branch="false" />
                <line number="312" hits="0" branch="false" />
                <line number="313" hits="0" branch="false" />
                <line number="314" hits="0" branch="false" />
                <line number="315" hits="0" branch="false" />
                <line number="316" hits="0" branch="false" />
                <line number="317" hits="0" branch="false" />
                <line number="318" hits="0" branch="false" />
                <line number="319" hits="0" branch="false" />
                <line number="320" hits="0" branch="false" />
                <line number="321" hits="0" branch="false" />
                <line number="322" hits="0" branch="false" />
                <line number="323" hits="0" branch="false" />
                <line number="324" hits="0" branch="false" />
                <line number="325" hits="0" branch="false" />
                <line number="326" hits="0" branch="false" />
                <line number="327" hits="0" branch="false" />
                <line number="328" hits="0" branch="false" />
                <line number="329" hits="0" branch="false" />
                <line number="330" hits="0" branch="false" />
                <line number="331" hits="0" branch="false" />
                <line number="332" hits="0" branch="false" />
                <line number="333" hits="0" branch="false" />
                <line number="334" hits="0" branch="false" />
                <line number="335" hits="0" branch="false" />
                <line number="336" hits="0" branch="false" />
                <line number="337" hits="0" branch="false" />
                <line number="338" hits="0" branch="false" />
                <line number="339" hits="0" branch="false" />
                <line number="340" hits="0" branch="false" />
                <line number="341" hits="0" branch="false" />
                <line number="343" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="22" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="33" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="35" hits="0" branch="false" />
            <line number="36" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="38" hits="0" branch="false" />
            <line number="39" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="41" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="45" hits="0" branch="false" />
            <line number="46" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="48" hits="0" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="53" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="55" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="58" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="64" hits="0" branch="false" />
            <line number="65" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="67" hits="0" branch="false" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="73" hits="0" branch="false" />
            <line number="74" hits="0" branch="false" />
            <line number="75" hits="0" branch="false" />
            <line number="76" hits="0" branch="false" />
            <line number="77" hits="0" branch="false" />
            <line number="78" hits="0" branch="false" />
            <line number="79" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="81" hits="0" branch="false" />
            <line number="82" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="87" hits="0" branch="false" />
            <line number="88" hits="0" branch="false" />
            <line number="89" hits="0" branch="false" />
            <line number="90" hits="0" branch="false" />
            <line number="91" hits="0" branch="false" />
            <line number="92" hits="0" branch="false" />
            <line number="93" hits="0" branch="false" />
            <line number="94" hits="0" branch="false" />
            <line number="98" hits="0" branch="false" />
            <line number="99" hits="0" branch="false" />
            <line number="100" hits="0" branch="false" />
            <line number="101" hits="0" branch="false" />
            <line number="102" hits="0" branch="false" />
            <line number="103" hits="0" branch="false" />
            <line number="104" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="109" hits="0" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="112" hits="0" branch="false" />
            <line number="113" hits="0" branch="false" />
            <line number="114" hits="0" branch="false" />
            <line number="115" hits="0" branch="false" />
            <line number="116" hits="0" branch="false" />
            <line number="117" hits="0" branch="false" />
            <line number="118" hits="0" branch="false" />
            <line number="119" hits="0" branch="false" />
            <line number="120" hits="0" branch="false" />
            <line number="124" hits="0" branch="false" />
            <line number="125" hits="0" branch="false" />
            <line number="126" hits="0" branch="false" />
            <line number="127" hits="0" branch="false" />
            <line number="128" hits="0" branch="false" />
            <line number="129" hits="0" branch="false" />
            <line number="130" hits="0" branch="false" />
            <line number="131" hits="0" branch="false" />
            <line number="132" hits="0" branch="false" />
            <line number="133" hits="0" branch="false" />
            <line number="134" hits="0" branch="false" />
            <line number="138" hits="0" branch="false" />
            <line number="139" hits="0" branch="false" />
            <line number="140" hits="0" branch="false" />
            <line number="141" hits="0" branch="false" />
            <line number="142" hits="0" branch="false" />
            <line number="146" hits="0" branch="false" />
            <line number="147" hits="0" branch="false" />
            <line number="148" hits="0" branch="false" />
            <line number="152" hits="0" branch="false" />
            <line number="153" hits="0" branch="false" />
            <line number="154" hits="0" branch="false" />
            <line number="155" hits="0" branch="false" />
            <line number="156" hits="0" branch="false" />
            <line number="157" hits="0" branch="false" />
            <line number="158" hits="0" branch="false" />
            <line number="159" hits="0" branch="false" />
            <line number="163" hits="0" branch="false" />
            <line number="167" hits="0" branch="false" />
            <line number="168" hits="0" branch="false" />
            <line number="169" hits="0" branch="false" />
            <line number="170" hits="0" branch="false" />
            <line number="171" hits="0" branch="false" />
            <line number="172" hits="0" branch="false" />
            <line number="173" hits="0" branch="false" />
            <line number="174" hits="0" branch="false" />
            <line number="175" hits="0" branch="false" />
            <line number="179" hits="0" branch="false" />
            <line number="180" hits="0" branch="false" />
            <line number="181" hits="0" branch="false" />
            <line number="182" hits="0" branch="false" />
            <line number="183" hits="0" branch="false" />
            <line number="184" hits="0" branch="false" />
            <line number="185" hits="0" branch="false" />
            <line number="186" hits="0" branch="false" />
            <line number="187" hits="0" branch="false" />
            <line number="188" hits="0" branch="false" />
            <line number="189" hits="0" branch="false" />
            <line number="190" hits="0" branch="false" />
            <line number="191" hits="0" branch="false" />
            <line number="192" hits="0" branch="false" />
            <line number="196" hits="0" branch="false" />
            <line number="197" hits="0" branch="false" />
            <line number="198" hits="0" branch="false" />
            <line number="199" hits="0" branch="false" />
            <line number="200" hits="0" branch="false" />
            <line number="201" hits="0" branch="false" />
            <line number="202" hits="0" branch="false" />
            <line number="203" hits="0" branch="false" />
            <line number="204" hits="0" branch="false" />
            <line number="205" hits="0" branch="false" />
            <line number="206" hits="0" branch="false" />
            <line number="207" hits="0" branch="false" />
            <line number="208" hits="0" branch="false" />
            <line number="209" hits="0" branch="false" />
            <line number="210" hits="0" branch="false" />
            <line number="214" hits="0" branch="false" />
            <line number="215" hits="0" branch="false" />
            <line number="216" hits="0" branch="false" />
            <line number="217" hits="0" branch="false" />
            <line number="218" hits="0" branch="false" />
            <line number="219" hits="0" branch="false" />
            <line number="223" hits="0" branch="false" />
            <line number="224" hits="0" branch="false" />
            <line number="225" hits="0" branch="false" />
            <line number="226" hits="0" branch="false" />
            <line number="227" hits="0" branch="false" />
            <line number="228" hits="0" branch="false" />
            <line number="232" hits="0" branch="false" />
            <line number="233" hits="0" branch="false" />
            <line number="234" hits="0" branch="false" />
            <line number="235" hits="0" branch="false" />
            <line number="236" hits="0" branch="false" />
            <line number="237" hits="0" branch="false" />
            <line number="241" hits="0" branch="false" />
            <line number="242" hits="0" branch="false" />
            <line number="243" hits="0" branch="false" />
            <line number="244" hits="0" branch="false" />
            <line number="245" hits="0" branch="false" />
            <line number="246" hits="0" branch="false" />
            <line number="250" hits="0" branch="false" />
            <line number="251" hits="0" branch="false" />
            <line number="252" hits="0" branch="false" />
            <line number="253" hits="0" branch="false" />
            <line number="254" hits="0" branch="false" />
            <line number="255" hits="0" branch="false" />
            <line number="259" hits="0" branch="false" />
            <line number="260" hits="0" branch="false" />
            <line number="261" hits="0" branch="false" />
            <line number="262" hits="0" branch="false" />
            <line number="263" hits="0" branch="false" />
            <line number="264" hits="0" branch="false" />
            <line number="268" hits="0" branch="false" />
            <line number="269" hits="0" branch="false" />
            <line number="270" hits="0" branch="false" />
            <line number="271" hits="0" branch="false" />
            <line number="272" hits="0" branch="false" />
            <line number="273" hits="0" branch="false" />
            <line number="277" hits="0" branch="false" />
            <line number="281" hits="0" branch="false" />
            <line number="282" hits="0" branch="false" />
            <line number="283" hits="0" branch="false" />
            <line number="284" hits="0" branch="false" />
            <line number="285" hits="0" branch="false" />
            <line number="286" hits="0" branch="false" />
            <line number="290" hits="0" branch="false" />
            <line number="291" hits="0" branch="false" />
            <line number="292" hits="0" branch="false" />
            <line number="293" hits="0" branch="false" />
            <line number="294" hits="0" branch="false" />
            <line number="295" hits="0" branch="false" />
            <line number="299" hits="0" branch="false" />
            <line number="303" hits="0" branch="false" />
            <line number="304" hits="0" branch="false" />
            <line number="305" hits="0" branch="false" />
            <line number="306" hits="0" branch="false" />
            <line number="307" hits="0" branch="false" />
            <line number="308" hits="0" branch="false" />
            <line number="312" hits="0" branch="false" />
            <line number="313" hits="0" branch="false" />
            <line number="314" hits="0" branch="false" />
            <line number="315" hits="0" branch="false" />
            <line number="316" hits="0" branch="false" />
            <line number="317" hits="0" branch="false" />
            <line number="318" hits="0" branch="false" />
            <line number="319" hits="0" branch="false" />
            <line number="320" hits="0" branch="false" />
            <line number="321" hits="0" branch="false" />
            <line number="322" hits="0" branch="false" />
            <line number="323" hits="0" branch="false" />
            <line number="324" hits="0" branch="false" />
            <line number="325" hits="0" branch="false" />
            <line number="326" hits="0" branch="false" />
            <line number="327" hits="0" branch="false" />
            <line number="328" hits="0" branch="false" />
            <line number="329" hits="0" branch="false" />
            <line number="330" hits="0" branch="false" />
            <line number="331" hits="0" branch="false" />
            <line number="332" hits="0" branch="false" />
            <line number="333" hits="0" branch="false" />
            <line number="334" hits="0" branch="false" />
            <line number="335" hits="0" branch="false" />
            <line number="336" hits="0" branch="false" />
            <line number="337" hits="0" branch="false" />
            <line number="338" hits="0" branch="false" />
            <line number="339" hits="0" branch="false" />
            <line number="340" hits="0" branch="false" />
            <line number="341" hits="0" branch="false" />
            <line number="343" hits="0" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Line" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\Line.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="38" branch="false" />
                <line number="12" hits="38" branch="false" />
                <line number="14" hits="38" branch="false" />
                <line number="15" hits="38" branch="false" />
              </lines>
            </method>
            <method name="Draw" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DrawRed" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="38" branch="false" />
            <line number="12" hits="38" branch="false" />
            <line number="14" hits="38" branch="false" />
            <line number="15" hits="38" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Model" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\Model.cs" line-rate="1" branch-rate="0.852941176470588" complexity="14">
          <methods>
            <method name="_shapes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="46" hits="5" branch="false" />
                <line number="47" hits="5" branch="false" />
                <line number="48" hits="5" branch="false" />
              </lines>
            </method>
            <method name="IsRedoEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="234" hits="1" branch="false" />
                <line number="235" hits="1" branch="false" />
                <line number="236" hits="1" branch="false" />
              </lines>
            </method>
            <method name="IsUndoEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="243" hits="1" branch="false" />
                <line number="244" hits="1" branch="false" />
                <line number="245" hits="1" branch="false" />
              </lines>
            </method>
            <method name="SetPointerMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="53" hits="4" branch="false" />
                <line number="54" hits="4" branch="false" />
                <line number="55" hits="4" branch="false" />
                <line number="56" hits="4" branch="false" />
                <line number="57" hits="4" branch="false" />
              </lines>
            </method>
            <method name="SetDrawingMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="61" hits="3" branch="false" />
                <line number="62" hits="3" branch="false" />
                <line number="63" hits="3" branch="false" />
                <line number="64" hits="3" branch="false" />
                <line number="65" hits="3" branch="false" />
              </lines>
            </method>
            <method name="ClickMouse" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="69" hits="2" branch="false" />
                <line number="70" hits="2" branch="false" />
                <line number="71" hits="2" branch="false" />
                <line number="72" hits="2" branch="false" />
              </lines>
            </method>
            <method name="PressMouse" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="76" hits="2" branch="false" />
                <line number="77" hits="2" branch="false" />
                <line number="78" hits="2" branch="false" />
                <line number="79" hits="2" branch="false" />
              </lines>
            </method>
            <method name="MoveMouse" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="83" hits="2" branch="false" />
                <line number="84" hits="2" branch="false" />
                <line number="85" hits="2" branch="false" />
                <line number="86" hits="2" branch="false" />
              </lines>
            </method>
            <method name="ReleaseMouse" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="90" hits="2" branch="false" />
                <line number="91" hits="2" branch="false" />
                <line number="92" hits="2" branch="false" />
                <line number="93" hits="2" branch="false" />
              </lines>
            </method>
            <method name="SortInfo" signature="(System.Double[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="97" hits="11" branch="false" />
                <line number="98" hits="11" branch="false" />
                <line number="99" hits="11" branch="true" condition-coverage="100% (2/2)" />
                <line number="100" hits="9" branch="false" />
                <line number="101" hits="9" branch="false" />
                <line number="102" hits="9" branch="false" />
                <line number="103" hits="9" branch="false" />
                <line number="105" hits="2" branch="false" />
                <line number="106" hits="2" branch="false" />
                <line number="107" hits="2" branch="false" />
                <line number="108" hits="2" branch="false" />
                <line number="109" hits="11" branch="true" condition-coverage="100% (2/2)" />
                <line number="110" hits="9" branch="false" />
                <line number="111" hits="9" branch="false" />
                <line number="112" hits="9" branch="false" />
                <line number="113" hits="9" branch="false" />
                <line number="115" hits="2" branch="false" />
                <line number="116" hits="2" branch="false" />
                <line number="117" hits="2" branch="false" />
                <line number="118" hits="2" branch="false" />
                <line number="119" hits="11" branch="false" />
                <line number="120" hits="11" branch="false" />
              </lines>
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
                <line number="128" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Draw" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="132" hits="1" branch="false" />
                <line number="133" hits="1" branch="false" />
                <line number="134" hits="7" branch="false" />
                <line number="135" hits="2" branch="false" />
                <line number="136" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="137" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="138" hits="1" branch="false" />
                <line number="139" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="1" branch="false" />
              </lines>
            </method>
            <method name="NotifyModelChanged" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines>
                <line number="145" hits="41" branch="false" />
                <line number="146" hits="41" branch="true" condition-coverage="100% (2/2)" />
                <line number="147" hits="1" branch="false" />
                <line number="148" hits="41" branch="false" />
              </lines>
            </method>
            <method name="AddShapeButton" signature="(PowerPoint.Factory/ShapeType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="152" hits="8" branch="false" />
                <line number="153" hits="8" branch="false" />
                <line number="154" hits="8" branch="true" condition-coverage="100% (2/2)" />
                <line number="155" hits="6" branch="false" />
                <line number="156" hits="6" branch="false" />
                <line number="157" hits="6" branch="false" />
                <line number="159" hits="2" branch="false" />
                <line number="160" hits="8" branch="false" />
              </lines>
            </method>
            <method name="DeleteShapeButton" signature="(System.Int32)" line-rate="1" branch-rate="0.75" complexity="NaN">
              <lines>
                <line number="164" hits="5" branch="false" />
                <line number="165" hits="5" branch="false" />
                <line number="166" hits="5" branch="true" condition-coverage="75% (3/4)" />
                <line number="167" hits="4" branch="false" />
                <line number="168" hits="4" branch="false" />
                <line number="170" hits="1" branch="false" />
                <line number="171" hits="1" branch="false" />
                <line number="172" hits="1" branch="false" />
                <line number="173" hits="5" branch="false" />
              </lines>
            </method>
            <method name="DeleteSelectedShape" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines>
                <line number="177" hits="2" branch="false" />
                <line number="178" hits="2" branch="true" condition-coverage="100% (6/6)" />
                <line number="179" hits="1" branch="false" />
                <line number="180" hits="1" branch="false" />
                <line number="181" hits="1" branch="false" />
                <line number="182" hits="1" branch="false" />
                <line number="183" hits="1" branch="false" />
                <line number="184" hits="2" branch="false" />
              </lines>
            </method>
            <method name="IsScaling" signature="(System.Double,System.Double)" line-rate="1" branch-rate="0.9" complexity="NaN">
              <lines>
                <line number="188" hits="7" branch="false" />
                <line number="189" hits="7" branch="true" condition-coverage="100% (2/2)" />
                <line number="190" hits="3" branch="false" />
                <line number="191" hits="3" branch="false" />
                <line number="192" hits="3" branch="true" condition-coverage="88% (7/8)" />
                <line number="193" hits="2" branch="false" />
                <line number="194" hits="1" branch="false" />
                <line number="195" hits="5" branch="false" />
                <line number="196" hits="7" branch="false" />
              </lines>
            </method>
            <method name="IsScale" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="200" hits="4" branch="false" />
                <line number="201" hits="4" branch="false" />
                <line number="202" hits="4" branch="false" />
              </lines>
            </method>
            <method name="AddShape" signature="(PowerPoint.Shape)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="206" hits="21" branch="false" />
                <line number="207" hits="21" branch="false" />
                <line number="208" hits="21" branch="false" />
                <line number="209" hits="21" branch="false" />
              </lines>
            </method>
            <method name="DeleteShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="213" hits="2" branch="false" />
                <line number="214" hits="2" branch="false" />
                <line number="215" hits="2" branch="false" />
                <line number="216" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Undo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="220" hits="3" branch="false" />
                <line number="221" hits="3" branch="false" />
                <line number="222" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Redo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="226" hits="2" branch="false" />
                <line number="227" hits="2" branch="false" />
                <line number="228" hits="1" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="19" hits="61" branch="false" />
                <line number="20" hits="61" branch="false" />
                <line number="22" hits="61" branch="false" />
                <line number="23" hits="61" branch="false" />
                <line number="24" hits="61" branch="false" />
                <line number="25" hits="61" branch="false" />
                <line number="28" hits="61" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="19" hits="61" branch="false" />
            <line number="20" hits="61" branch="false" />
            <line number="22" hits="61" branch="false" />
            <line number="23" hits="61" branch="false" />
            <line number="24" hits="61" branch="false" />
            <line number="25" hits="61" branch="false" />
            <line number="28" hits="61" branch="false" />
            <line number="46" hits="5" branch="false" />
            <line number="47" hits="5" branch="false" />
            <line number="48" hits="5" branch="false" />
            <line number="53" hits="4" branch="false" />
            <line number="54" hits="4" branch="false" />
            <line number="55" hits="4" branch="false" />
            <line number="56" hits="4" branch="false" />
            <line number="57" hits="4" branch="false" />
            <line number="61" hits="3" branch="false" />
            <line number="62" hits="3" branch="false" />
            <line number="63" hits="3" branch="false" />
            <line number="64" hits="3" branch="false" />
            <line number="65" hits="3" branch="false" />
            <line number="69" hits="2" branch="false" />
            <line number="70" hits="2" branch="false" />
            <line number="71" hits="2" branch="false" />
            <line number="72" hits="2" branch="false" />
            <line number="76" hits="2" branch="false" />
            <line number="77" hits="2" branch="false" />
            <line number="78" hits="2" branch="false" />
            <line number="79" hits="2" branch="false" />
            <line number="83" hits="2" branch="false" />
            <line number="84" hits="2" branch="false" />
            <line number="85" hits="2" branch="false" />
            <line number="86" hits="2" branch="false" />
            <line number="90" hits="2" branch="false" />
            <line number="91" hits="2" branch="false" />
            <line number="92" hits="2" branch="false" />
            <line number="93" hits="2" branch="false" />
            <line number="97" hits="11" branch="false" />
            <line number="98" hits="11" branch="false" />
            <line number="99" hits="11" branch="true" condition-coverage="100% (2/2)" />
            <line number="100" hits="9" branch="false" />
            <line number="101" hits="9" branch="false" />
            <line number="102" hits="9" branch="false" />
            <line number="103" hits="9" branch="false" />
            <line number="105" hits="2" branch="false" />
            <line number="106" hits="2" branch="false" />
            <line number="107" hits="2" branch="false" />
            <line number="108" hits="2" branch="false" />
            <line number="109" hits="11" branch="true" condition-coverage="100% (2/2)" />
            <line number="110" hits="9" branch="false" />
            <line number="111" hits="9" branch="false" />
            <line number="112" hits="9" branch="false" />
            <line number="113" hits="9" branch="false" />
            <line number="115" hits="2" branch="false" />
            <line number="116" hits="2" branch="false" />
            <line number="117" hits="2" branch="false" />
            <line number="118" hits="2" branch="false" />
            <line number="119" hits="11" branch="false" />
            <line number="120" hits="11" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="133" hits="1" branch="false" />
            <line number="134" hits="7" branch="false" />
            <line number="135" hits="2" branch="false" />
            <line number="136" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="137" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="138" hits="1" branch="false" />
            <line number="139" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
            <line number="145" hits="41" branch="false" />
            <line number="146" hits="41" branch="true" condition-coverage="100% (2/2)" />
            <line number="147" hits="1" branch="false" />
            <line number="148" hits="41" branch="false" />
            <line number="152" hits="8" branch="false" />
            <line number="153" hits="8" branch="false" />
            <line number="154" hits="8" branch="true" condition-coverage="100% (2/2)" />
            <line number="155" hits="6" branch="false" />
            <line number="156" hits="6" branch="false" />
            <line number="157" hits="6" branch="false" />
            <line number="159" hits="2" branch="false" />
            <line number="160" hits="8" branch="false" />
            <line number="164" hits="5" branch="false" />
            <line number="165" hits="5" branch="false" />
            <line number="166" hits="5" branch="true" condition-coverage="75% (3/4)" />
            <line number="167" hits="4" branch="false" />
            <line number="168" hits="4" branch="false" />
            <line number="170" hits="1" branch="false" />
            <line number="171" hits="1" branch="false" />
            <line number="172" hits="1" branch="false" />
            <line number="173" hits="5" branch="false" />
            <line number="177" hits="2" branch="false" />
            <line number="178" hits="2" branch="true" condition-coverage="100% (6/6)" />
            <line number="179" hits="1" branch="false" />
            <line number="180" hits="1" branch="false" />
            <line number="181" hits="1" branch="false" />
            <line number="182" hits="1" branch="false" />
            <line number="183" hits="1" branch="false" />
            <line number="184" hits="2" branch="false" />
            <line number="188" hits="7" branch="false" />
            <line number="189" hits="7" branch="true" condition-coverage="100% (2/2)" />
            <line number="190" hits="3" branch="false" />
            <line number="191" hits="3" branch="false" />
            <line number="192" hits="3" branch="true" condition-coverage="88% (7/8)" />
            <line number="193" hits="2" branch="false" />
            <line number="194" hits="1" branch="false" />
            <line number="195" hits="5" branch="false" />
            <line number="196" hits="7" branch="false" />
            <line number="200" hits="4" branch="false" />
            <line number="201" hits="4" branch="false" />
            <line number="202" hits="4" branch="false" />
            <line number="206" hits="21" branch="false" />
            <line number="207" hits="21" branch="false" />
            <line number="208" hits="21" branch="false" />
            <line number="209" hits="21" branch="false" />
            <line number="213" hits="2" branch="false" />
            <line number="214" hits="2" branch="false" />
            <line number="215" hits="2" branch="false" />
            <line number="216" hits="2" branch="false" />
            <line number="220" hits="3" branch="false" />
            <line number="221" hits="3" branch="false" />
            <line number="222" hits="2" branch="false" />
            <line number="226" hits="2" branch="false" />
            <line number="227" hits="2" branch="false" />
            <line number="228" hits="1" branch="false" />
            <line number="234" hits="1" branch="false" />
            <line number="235" hits="1" branch="false" />
            <line number="236" hits="1" branch="false" />
            <line number="243" hits="1" branch="false" />
            <line number="244" hits="1" branch="false" />
            <line number="245" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.PointerState" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\PointerState.cs" line-rate="0.607594936708861" branch-rate="0.395833333333333" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(PowerPoint.Model)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="20" branch="false" />
                <line number="14" hits="20" branch="false" />
                <line number="15" hits="20" branch="false" />
                <line number="23" hits="20" branch="false" />
                <line number="24" hits="20" branch="false" />
                <line number="25" hits="20" branch="false" />
                <line number="26" hits="20" branch="false" />
              </lines>
            </method>
            <method name="ClickMouse" signature="(System.Double,System.Double)" line-rate="1" branch-rate="0.8" complexity="NaN">
              <lines>
                <line number="30" hits="4" branch="false" />
                <line number="31" hits="4" branch="false" />
                <line number="32" hits="19" branch="false" />
                <line number="33" hits="4" branch="false" />
                <line number="34" hits="4" branch="false" />
                <line number="35" hits="4" branch="false" />
                <line number="36" hits="4" branch="true" condition-coverage="80% (8/10)" />
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="44" hits="3" branch="false" />
                <line number="45" hits="3" branch="false" />
                <line number="46" hits="3" branch="false" />
                <line number="47" hits="3" branch="false" />
                <line number="48" hits="3" branch="false" />
                <line number="49" hits="4" branch="false" />
              </lines>
            </method>
            <method name="PressMouse" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="0.666666666666667" complexity="NaN">
              <lines>
                <line number="53" hits="4" branch="false" />
                <line number="54" hits="4" branch="false" />
                <line number="55" hits="4" branch="true" condition-coverage="50% (2/4)" />
                <line number="56" hits="4" branch="false" />
                <line number="57" hits="4" branch="false" />
                <line number="58" hits="4" branch="false" />
                <line number="59" hits="4" branch="false" />
                <line number="60" hits="4" branch="true" condition-coverage="100% (2/2)" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="4" branch="false" />
                <line number="63" hits="4" branch="false" />
              </lines>
            </method>
            <method name="MoveMouse" signature="(System.Double,System.Double)" line-rate="0.285714285714286" branch-rate="0.2" complexity="NaN">
              <lines>
                <line number="67" hits="2" branch="false" />
                <line number="68" hits="2" branch="true" condition-coverage="50% (1/2)" />
                <line number="69" hits="0" branch="false" />
                <line number="70" hits="0" branch="true" condition-coverage="0% (0/6)" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
                <line number="73" hits="0" branch="false" />
                <line number="74" hits="0" branch="false" />
                <line number="75" hits="0" branch="false" />
                <line number="77" hits="2" branch="false" />
                <line number="78" hits="2" branch="true" condition-coverage="30% (3/10)" />
                <line number="79" hits="0" branch="false" />
                <line number="80" hits="0" branch="false" />
                <line number="81" hits="0" branch="false" />
                <line number="82" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="83" hits="0" branch="false" />
                <line number="85" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="87" hits="0" branch="false" />
                <line number="88" hits="2" branch="false" />
                <line number="89" hits="2" branch="false" />
              </lines>
            </method>
            <method name="ReleaseMouse" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="0.272727272727273" branch-rate="0.25" complexity="NaN">
              <lines>
                <line number="93" hits="5" branch="false" />
                <line number="94" hits="5" branch="false" />
                <line number="95" hits="5" branch="false" />
                <line number="96" hits="5" branch="true" condition-coverage="38% (3/8)" />
                <line number="97" hits="0" branch="false" />
                <line number="98" hits="0" branch="false" />
                <line number="99" hits="0" branch="false" />
                <line number="100" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="101" hits="0" branch="false" />
                <line number="102" hits="0" branch="false" />
                <line number="103" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="106" hits="0" branch="false" />
                <line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="108" hits="0" branch="false" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="112" hits="0" branch="false" />
                <line number="113" hits="0" branch="false" />
                <line number="114" hits="0" branch="false" />
                <line number="115" hits="5" branch="false" />
                <line number="116" hits="5" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="20" branch="false" />
            <line number="14" hits="20" branch="false" />
            <line number="15" hits="20" branch="false" />
            <line number="23" hits="20" branch="false" />
            <line number="24" hits="20" branch="false" />
            <line number="25" hits="20" branch="false" />
            <line number="26" hits="20" branch="false" />
            <line number="30" hits="4" branch="false" />
            <line number="31" hits="4" branch="false" />
            <line number="32" hits="19" branch="false" />
            <line number="33" hits="4" branch="false" />
            <line number="34" hits="4" branch="false" />
            <line number="35" hits="4" branch="false" />
            <line number="36" hits="4" branch="true" condition-coverage="80% (8/10)" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="44" hits="3" branch="false" />
            <line number="45" hits="3" branch="false" />
            <line number="46" hits="3" branch="false" />
            <line number="47" hits="3" branch="false" />
            <line number="48" hits="3" branch="false" />
            <line number="49" hits="4" branch="false" />
            <line number="53" hits="4" branch="false" />
            <line number="54" hits="4" branch="false" />
            <line number="55" hits="4" branch="true" condition-coverage="50% (2/4)" />
            <line number="56" hits="4" branch="false" />
            <line number="57" hits="4" branch="false" />
            <line number="58" hits="4" branch="false" />
            <line number="59" hits="4" branch="false" />
            <line number="60" hits="4" branch="true" condition-coverage="100% (2/2)" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="4" branch="false" />
            <line number="63" hits="4" branch="false" />
            <line number="67" hits="2" branch="false" />
            <line number="68" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="69" hits="0" branch="false" />
            <line number="70" hits="0" branch="true" condition-coverage="0% (0/6)" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="73" hits="0" branch="false" />
            <line number="74" hits="0" branch="false" />
            <line number="75" hits="0" branch="false" />
            <line number="77" hits="2" branch="false" />
            <line number="78" hits="2" branch="true" condition-coverage="30% (3/10)" />
            <line number="79" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="81" hits="0" branch="false" />
            <line number="82" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="83" hits="0" branch="false" />
            <line number="85" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="87" hits="0" branch="false" />
            <line number="88" hits="2" branch="false" />
            <line number="89" hits="2" branch="false" />
            <line number="93" hits="5" branch="false" />
            <line number="94" hits="5" branch="false" />
            <line number="95" hits="5" branch="false" />
            <line number="96" hits="5" branch="true" condition-coverage="38% (3/8)" />
            <line number="97" hits="0" branch="false" />
            <line number="98" hits="0" branch="false" />
            <line number="99" hits="0" branch="false" />
            <line number="100" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="101" hits="0" branch="false" />
            <line number="102" hits="0" branch="false" />
            <line number="103" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="106" hits="0" branch="false" />
            <line number="107" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="108" hits="0" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="112" hits="0" branch="false" />
            <line number="113" hits="0" branch="false" />
            <line number="114" hits="0" branch="false" />
            <line number="115" hits="5" branch="false" />
            <line number="116" hits="5" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.PresentationModel.WindowsFormsGraphicsAdaptor" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\PresentationModel\WindowsFormsGraphicsAdaptor.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Drawing.Graphics)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="15" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ClearAll" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="26" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DrawLine" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="30" hits="0" branch="false" />
                <line number="31" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DrawRectangle" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="36" hits="0" branch="false" />
                <line number="37" hits="0" branch="false" />
                <line number="38" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DrawEllipse" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="44" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DrawRedLine" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="48" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DrawRedRectangle" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="54" hits="0" branch="false" />
                <line number="55" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DrawRedEllipse" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="15" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="26" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="36" hits="0" branch="false" />
            <line number="37" hits="0" branch="false" />
            <line number="38" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="44" hits="0" branch="false" />
            <line number="48" hits="0" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="55" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Program" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Program.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name="Main" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Rectangle" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\Rectangle.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="7" branch="false" />
                <line number="12" hits="7" branch="false" />
                <line number="14" hits="7" branch="false" />
                <line number="15" hits="7" branch="false" />
              </lines>
            </method>
            <method name="Draw" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DrawRed" signature="(PowerPoint.IGraphics)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="7" branch="false" />
            <line number="12" hits="7" branch="false" />
            <line number="14" hits="7" branch="false" />
            <line number="15" hits="7" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Shape" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\Model\Shape.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Type" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Information" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Information" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
              </lines>
            </method>
            <method name="SetShapeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="50" hits="52" branch="false" />
                <line number="51" hits="52" branch="false" />
                <line number="52" hits="52" branch="false" />
              </lines>
            </method>
            <method name="SetInformation" signature="(System.Double,System.Double,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="56" hits="24" branch="false" />
                <line number="57" hits="24" branch="false" />
                <line number="58" hits="24" branch="false" />
                <line number="59" hits="24" branch="false" />
                <line number="60" hits="24" branch="false" />
                <line number="62" hits="24" branch="false" />
                <line number="63" hits="24" branch="false" />
              </lines>
            </method>
            <method name="GetInformation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="67" hits="3" branch="false" />
                <line number="68" hits="3" branch="false" />
                <line number="69" hits="3" branch="false" />
              </lines>
            </method>
            <method name="GetInformationNumber" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="73" hits="7" branch="false" />
                <line number="74" hits="7" branch="false" />
                <line number="75" hits="7" branch="false" />
              </lines>
            </method>
            <method name="GetShapeName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="79" hits="12" branch="false" />
                <line number="80" hits="12" branch="false" />
                <line number="81" hits="12" branch="false" />
              </lines>
            </method>
            <method name="NotifyPropertyChanged" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="91" hits="4" branch="false" />
                <line number="92" hits="4" branch="true" condition-coverage="100% (2/2)" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="96" hits="4" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="25" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="50" hits="52" branch="false" />
            <line number="51" hits="52" branch="false" />
            <line number="52" hits="52" branch="false" />
            <line number="56" hits="24" branch="false" />
            <line number="57" hits="24" branch="false" />
            <line number="58" hits="24" branch="false" />
            <line number="59" hits="24" branch="false" />
            <line number="60" hits="24" branch="false" />
            <line number="62" hits="24" branch="false" />
            <line number="63" hits="24" branch="false" />
            <line number="67" hits="3" branch="false" />
            <line number="68" hits="3" branch="false" />
            <line number="69" hits="3" branch="false" />
            <line number="73" hits="7" branch="false" />
            <line number="74" hits="7" branch="false" />
            <line number="75" hits="7" branch="false" />
            <line number="79" hits="12" branch="false" />
            <line number="80" hits="12" branch="false" />
            <line number="81" hits="12" branch="false" />
            <line number="91" hits="4" branch="false" />
            <line number="92" hits="4" branch="true" condition-coverage="100% (2/2)" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="96" hits="4" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.ViewModel" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPoint\PresentationModel\ViewModel.cs" line-rate="0.967032967032967" branch-rate="1" complexity="15">
          <methods>
            <method name="_pointer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(PowerPoint.Model)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="17" hits="19" branch="false" />
                <line number="18" hits="19" branch="false" />
                <line number="19" hits="19" branch="false" />
                <line number="20" hits="19" branch="false" />
                <line number="21" hits="19" branch="false" />
                <line number="23" hits="19" branch="false" />
                <line number="24" hits="19" branch="false" />
                <line number="25" hits="19" branch="false" />
                <line number="26" hits="19" branch="false" />
              </lines>
            </method>
            <method name="Draw" signature="(System.Drawing.Graphics)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="30" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="35" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ResetState" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="39" hits="3" branch="false" />
                <line number="40" hits="3" branch="false" />
                <line number="41" hits="3" branch="false" />
                <line number="42" hits="3" branch="false" />
                <line number="43" hits="3" branch="false" />
                <line number="44" hits="3" branch="false" />
                <line number="45" hits="3" branch="false" />
                <line number="46" hits="3" branch="false" />
              </lines>
            </method>
            <method name="IsDrawingEnabled" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines>
                <line number="58" hits="9" branch="false" />
                <line number="59" hits="9" branch="true" condition-coverage="100% (6/6)" />
                <line number="60" hits="8" branch="false" />
                <line number="61" hits="8" branch="true" condition-coverage="100% (4/4)" />
                <line number="62" hits="5" branch="false" />
                <line number="63" hits="5" branch="false" />
                <line number="65" hits="3" branch="false" />
                <line number="66" hits="4" branch="false" />
                <line number="67" hits="9" branch="false" />
              </lines>
            </method>
            <method name="IsRectangleEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
              </lines>
            </method>
            <method name="IsLineEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
              </lines>
            </method>
            <method name="IsEllipseEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
              </lines>
            </method>
            <method name="StartDrawing" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="89" hits="2" branch="false" />
                <line number="90" hits="2" branch="false" />
                <line number="91" hits="2" branch="false" />
                <line number="92" hits="2" branch="false" />
                <line number="93" hits="2" branch="false" />
              </lines>
            </method>
            <method name="BeingRectangleMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="97" hits="2" branch="false" />
                <line number="98" hits="2" branch="false" />
                <line number="99" hits="2" branch="false" />
                <line number="100" hits="2" branch="false" />
                <line number="101" hits="2" branch="false" />
                <line number="102" hits="2" branch="false" />
              </lines>
            </method>
            <method name="BeingLineMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="106" hits="2" branch="false" />
                <line number="107" hits="2" branch="false" />
                <line number="108" hits="2" branch="false" />
                <line number="109" hits="2" branch="false" />
                <line number="110" hits="2" branch="false" />
                <line number="111" hits="2" branch="false" />
              </lines>
            </method>
            <method name="BeingEllipseMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="115" hits="2" branch="false" />
                <line number="116" hits="2" branch="false" />
                <line number="117" hits="2" branch="false" />
                <line number="118" hits="2" branch="false" />
                <line number="119" hits="2" branch="false" />
                <line number="120" hits="2" branch="false" />
              </lines>
            </method>
            <method name="AddShape" signature="(PowerPoint.Factory/ShapeType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeleteShapeButton" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="130" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeleteSelectedShape" signature="(System.Windows.Forms.Keys)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="136" hits="2" branch="false" />
                <line number="137" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="138" hits="1" branch="false" />
                <line number="139" hits="1" branch="false" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="2" branch="false" />
              </lines>
            </method>
            <method name="ClickDrawPictureBox" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="145" hits="2" branch="false" />
                <line number="146" hits="2" branch="true" condition-coverage="100% (2/2)" />
                <line number="147" hits="1" branch="false" />
                <line number="148" hits="1" branch="false" />
                <line number="149" hits="1" branch="false" />
                <line number="150" hits="2" branch="false" />
              </lines>
            </method>
            <method name="PressDrawPictureBox" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="154" hits="1" branch="false" />
                <line number="155" hits="1" branch="false" />
                <line number="156" hits="1" branch="false" />
              </lines>
            </method>
            <method name="MoveMouseOnDrawPictureBox" signature="(System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="160" hits="1" branch="false" />
                <line number="161" hits="1" branch="false" />
                <line number="162" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ReleaseDrawPictureBox" signature="(PowerPoint.Factory/ShapeType,System.Double,System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="166" hits="1" branch="false" />
                <line number="167" hits="1" branch="false" />
                <line number="168" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="17" hits="19" branch="false" />
            <line number="18" hits="19" branch="false" />
            <line number="19" hits="19" branch="false" />
            <line number="20" hits="19" branch="false" />
            <line number="21" hits="19" branch="false" />
            <line number="23" hits="19" branch="false" />
            <line number="24" hits="19" branch="false" />
            <line number="25" hits="19" branch="false" />
            <line number="26" hits="19" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="35" hits="0" branch="false" />
            <line number="39" hits="3" branch="false" />
            <line number="40" hits="3" branch="false" />
            <line number="41" hits="3" branch="false" />
            <line number="42" hits="3" branch="false" />
            <line number="43" hits="3" branch="false" />
            <line number="44" hits="3" branch="false" />
            <line number="45" hits="3" branch="false" />
            <line number="46" hits="3" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="58" hits="9" branch="false" />
            <line number="59" hits="9" branch="true" condition-coverage="100% (6/6)" />
            <line number="60" hits="8" branch="false" />
            <line number="61" hits="8" branch="true" condition-coverage="100% (4/4)" />
            <line number="62" hits="5" branch="false" />
            <line number="63" hits="5" branch="false" />
            <line number="65" hits="3" branch="false" />
            <line number="66" hits="4" branch="false" />
            <line number="67" hits="9" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="89" hits="2" branch="false" />
            <line number="90" hits="2" branch="false" />
            <line number="91" hits="2" branch="false" />
            <line number="92" hits="2" branch="false" />
            <line number="93" hits="2" branch="false" />
            <line number="97" hits="2" branch="false" />
            <line number="98" hits="2" branch="false" />
            <line number="99" hits="2" branch="false" />
            <line number="100" hits="2" branch="false" />
            <line number="101" hits="2" branch="false" />
            <line number="102" hits="2" branch="false" />
            <line number="106" hits="2" branch="false" />
            <line number="107" hits="2" branch="false" />
            <line number="108" hits="2" branch="false" />
            <line number="109" hits="2" branch="false" />
            <line number="110" hits="2" branch="false" />
            <line number="111" hits="2" branch="false" />
            <line number="115" hits="2" branch="false" />
            <line number="116" hits="2" branch="false" />
            <line number="117" hits="2" branch="false" />
            <line number="118" hits="2" branch="false" />
            <line number="119" hits="2" branch="false" />
            <line number="120" hits="2" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="136" hits="2" branch="false" />
            <line number="137" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="138" hits="1" branch="false" />
            <line number="139" hits="1" branch="false" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="2" branch="false" />
            <line number="145" hits="2" branch="false" />
            <line number="146" hits="2" branch="true" condition-coverage="100% (2/2)" />
            <line number="147" hits="1" branch="false" />
            <line number="148" hits="1" branch="false" />
            <line number="149" hits="1" branch="false" />
            <line number="150" hits="2" branch="false" />
            <line number="154" hits="1" branch="false" />
            <line number="155" hits="1" branch="false" />
            <line number="156" hits="1" branch="false" />
            <line number="160" hits="1" branch="false" />
            <line number="161" hits="1" branch="false" />
            <line number="162" hits="1" branch="false" />
            <line number="166" hits="1" branch="false" />
            <line number="167" hits="1" branch="false" />
            <line number="168" hits="1" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="PowerPointTests" line-rate="0.9967585089141" branch-rate="0.5" complexity="87">
      <classes>
        <class name="PowerPoint.PresentationModel.Tests.WindowsFormsGraphicsAdaptorTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\PresentationModel\WindowsFormsGraphicsAdaptorTests.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="TestWindowsFormsGraphicsAdaptor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestClearAllTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="26" hits="1" branch="false" />
                <line number="27" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawLine" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRectangle" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawEllipse" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRedLine" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRedRectangle" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRedEllipse" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="27" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.DrawingStateTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\DrawingStateTests.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="20" hits="13" branch="false" />
                <line number="21" hits="13" branch="false" />
                <line number="22" hits="13" branch="false" />
                <line number="23" hits="13" branch="false" />
              </lines>
            </method>
            <method name="DrawingStateTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ClickMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
              </lines>
            </method>
            <method name="PressMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
              </lines>
            </method>
            <method name="MoveMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ReleaseMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
                <line number="103" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
                <line number="106" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="20" hits="13" branch="false" />
            <line number="21" hits="13" branch="false" />
            <line number="22" hits="13" branch="false" />
            <line number="23" hits="13" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.EllipseTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\EllipseTests.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="21" hits="2" branch="false" />
                <line number="22" hits="2" branch="false" />
                <line number="23" hits="2" branch="false" />
              </lines>
            </method>
            <method name="TestDraw" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRed" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="21" hits="2" branch="false" />
            <line number="22" hits="2" branch="false" />
            <line number="23" hits="2" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.FactoryTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\FactoryTests.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="TestCreateInformation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
                <line number="23" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestCreateShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestAddShapeButton" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="23" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.LineTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\LineTests.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="21" hits="2" branch="false" />
                <line number="22" hits="2" branch="false" />
                <line number="23" hits="2" branch="false" />
              </lines>
            </method>
            <method name="TestDraw" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRed" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="21" hits="2" branch="false" />
            <line number="22" hits="2" branch="false" />
            <line number="23" hits="2" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.ModelTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\ModelTests.cs" line-rate="0.987577639751553" branch-rate="0.5" complexity="24">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="21" hits="21" branch="false" />
                <line number="22" hits="21" branch="false" />
                <line number="23" hits="21" branch="false" />
              </lines>
            </method>
            <method name="TestBindingListShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestSetPointerMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestSetDrawingMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestClickMouse" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestPressMouse" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestMoveMouse" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestReleaseMouse" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestSortInfo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="87" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestClear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="106" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
                <line number="109" hits="1" branch="false" />
                <line number="110" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDraw" signature="()" line-rate="1" branch-rate="0.5" complexity="3">
              <lines>
                <line number="115" hits="1" branch="false" />
                <line number="116" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="119" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="122" hits="1" branch="false" />
                <line number="123" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
                <line number="128" hits="1" branch="false" />
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
                <line number="133" hits="1" branch="false" />
                <line number="134" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="135" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
                <line number="139" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="1" branch="false" />
                <line number="142" hits="1" branch="false" />
                <line number="143" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestNotifyModelChanged" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="148" hits="1" branch="false" />
                <line number="149" hits="1" branch="false" />
                <line number="150" hits="4" branch="false" />
                <line number="151" hits="1" branch="false" />
                <line number="152" hits="1" branch="false" />
                <line number="153" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestAddShapeButton" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="158" hits="1" branch="false" />
                <line number="159" hits="1" branch="false" />
                <line number="160" hits="1" branch="false" />
                <line number="161" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDeleteShapeButton" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="166" hits="1" branch="false" />
                <line number="167" hits="1" branch="false" />
                <line number="168" hits="1" branch="false" />
                <line number="169" hits="1" branch="false" />
                <line number="170" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDeleteSelectedShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="175" hits="1" branch="false" />
                <line number="176" hits="1" branch="false" />
                <line number="177" hits="1" branch="false" />
                <line number="178" hits="1" branch="false" />
                <line number="179" hits="1" branch="false" />
                <line number="180" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsScaling" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="185" hits="1" branch="false" />
                <line number="186" hits="1" branch="false" />
                <line number="187" hits="1" branch="false" />
                <line number="188" hits="1" branch="false" />
                <line number="189" hits="1" branch="false" />
                <line number="190" hits="1" branch="false" />
                <line number="191" hits="1" branch="false" />
                <line number="192" hits="1" branch="false" />
                <line number="193" hits="1" branch="false" />
                <line number="194" hits="1" branch="false" />
                <line number="195" hits="1" branch="false" />
                <line number="196" hits="1" branch="false" />
                <line number="197" hits="1" branch="false" />
                <line number="198" hits="1" branch="false" />
                <line number="199" hits="1" branch="false" />
                <line number="200" hits="1" branch="false" />
                <line number="201" hits="1" branch="false" />
                <line number="202" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestGetIsScaling" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="207" hits="1" branch="false" />
                <line number="208" hits="1" branch="false" />
                <line number="209" hits="1" branch="false" />
                <line number="210" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="215" hits="1" branch="false" />
                <line number="216" hits="1" branch="false" />
                <line number="217" hits="1" branch="false" />
                <line number="218" hits="1" branch="false" />
                <line number="219" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestUndo" signature="()" line-rate="0.916666666666667" branch-rate="1" complexity="1">
              <lines>
                <line number="224" hits="1" branch="false" />
                <line number="226" hits="1" branch="false" />
                <line number="227" hits="1" branch="false" />
                <line number="228" hits="0" branch="false" />
                <line number="229" hits="1" branch="false" />
                <line number="230" hits="1" branch="false" />
                <line number="231" hits="1" branch="false" />
                <line number="232" hits="1" branch="false" />
                <line number="233" hits="1" branch="false" />
                <line number="234" hits="1" branch="false" />
                <line number="235" hits="1" branch="false" />
                <line number="236" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestRedo" signature="()" line-rate="0.923076923076923" branch-rate="1" complexity="1">
              <lines>
                <line number="241" hits="1" branch="false" />
                <line number="243" hits="1" branch="false" />
                <line number="244" hits="1" branch="false" />
                <line number="245" hits="0" branch="false" />
                <line number="246" hits="1" branch="false" />
                <line number="247" hits="1" branch="false" />
                <line number="248" hits="1" branch="false" />
                <line number="249" hits="1" branch="false" />
                <line number="250" hits="1" branch="false" />
                <line number="251" hits="1" branch="false" />
                <line number="252" hits="1" branch="false" />
                <line number="253" hits="1" branch="false" />
                <line number="254" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsRedoEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="259" hits="1" branch="false" />
                <line number="260" hits="1" branch="false" />
                <line number="261" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsUndoEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="266" hits="1" branch="false" />
                <line number="267" hits="1" branch="false" />
                <line number="268" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="21" hits="21" branch="false" />
            <line number="22" hits="21" branch="false" />
            <line number="23" hits="21" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="110" hits="1" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="119" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="122" hits="1" branch="false" />
            <line number="123" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="133" hits="1" branch="false" />
            <line number="134" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="135" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="139" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
            <line number="142" hits="1" branch="false" />
            <line number="143" hits="1" branch="false" />
            <line number="148" hits="1" branch="false" />
            <line number="149" hits="1" branch="false" />
            <line number="150" hits="4" branch="false" />
            <line number="151" hits="1" branch="false" />
            <line number="152" hits="1" branch="false" />
            <line number="153" hits="1" branch="false" />
            <line number="158" hits="1" branch="false" />
            <line number="159" hits="1" branch="false" />
            <line number="160" hits="1" branch="false" />
            <line number="161" hits="1" branch="false" />
            <line number="166" hits="1" branch="false" />
            <line number="167" hits="1" branch="false" />
            <line number="168" hits="1" branch="false" />
            <line number="169" hits="1" branch="false" />
            <line number="170" hits="1" branch="false" />
            <line number="175" hits="1" branch="false" />
            <line number="176" hits="1" branch="false" />
            <line number="177" hits="1" branch="false" />
            <line number="178" hits="1" branch="false" />
            <line number="179" hits="1" branch="false" />
            <line number="180" hits="1" branch="false" />
            <line number="185" hits="1" branch="false" />
            <line number="186" hits="1" branch="false" />
            <line number="187" hits="1" branch="false" />
            <line number="188" hits="1" branch="false" />
            <line number="189" hits="1" branch="false" />
            <line number="190" hits="1" branch="false" />
            <line number="191" hits="1" branch="false" />
            <line number="192" hits="1" branch="false" />
            <line number="193" hits="1" branch="false" />
            <line number="194" hits="1" branch="false" />
            <line number="195" hits="1" branch="false" />
            <line number="196" hits="1" branch="false" />
            <line number="197" hits="1" branch="false" />
            <line number="198" hits="1" branch="false" />
            <line number="199" hits="1" branch="false" />
            <line number="200" hits="1" branch="false" />
            <line number="201" hits="1" branch="false" />
            <line number="202" hits="1" branch="false" />
            <line number="207" hits="1" branch="false" />
            <line number="208" hits="1" branch="false" />
            <line number="209" hits="1" branch="false" />
            <line number="210" hits="1" branch="false" />
            <line number="215" hits="1" branch="false" />
            <line number="216" hits="1" branch="false" />
            <line number="217" hits="1" branch="false" />
            <line number="218" hits="1" branch="false" />
            <line number="219" hits="1" branch="false" />
            <line number="224" hits="1" branch="false" />
            <line number="226" hits="1" branch="false" />
            <line number="227" hits="1" branch="false" />
            <line number="228" hits="0" branch="false" />
            <line number="229" hits="1" branch="false" />
            <line number="230" hits="1" branch="false" />
            <line number="231" hits="1" branch="false" />
            <line number="232" hits="1" branch="false" />
            <line number="233" hits="1" branch="false" />
            <line number="234" hits="1" branch="false" />
            <line number="235" hits="1" branch="false" />
            <line number="236" hits="1" branch="false" />
            <line number="241" hits="1" branch="false" />
            <line number="243" hits="1" branch="false" />
            <line number="244" hits="1" branch="false" />
            <line number="245" hits="0" branch="false" />
            <line number="246" hits="1" branch="false" />
            <line number="247" hits="1" branch="false" />
            <line number="248" hits="1" branch="false" />
            <line number="249" hits="1" branch="false" />
            <line number="250" hits="1" branch="false" />
            <line number="251" hits="1" branch="false" />
            <line number="252" hits="1" branch="false" />
            <line number="253" hits="1" branch="false" />
            <line number="254" hits="1" branch="false" />
            <line number="259" hits="1" branch="false" />
            <line number="260" hits="1" branch="false" />
            <line number="261" hits="1" branch="false" />
            <line number="266" hits="1" branch="false" />
            <line number="267" hits="1" branch="false" />
            <line number="268" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.PointerStateTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\PointerStateTests.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="22" hits="8" branch="false" />
                <line number="23" hits="8" branch="false" />
                <line number="24" hits="8" branch="false" />
                <line number="25" hits="8" branch="false" />
              </lines>
            </method>
            <method name="PointerStateTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ClickMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
              </lines>
            </method>
            <method name="PressMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
              </lines>
            </method>
            <method name="MoveMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="76" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ReleaseMouseTest" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="106" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
                <line number="109" hits="1" branch="false" />
                <line number="110" hits="1" branch="false" />
                <line number="111" hits="1" branch="false" />
                <line number="112" hits="1" branch="false" />
                <line number="113" hits="1" branch="false" />
                <line number="114" hits="1" branch="false" />
                <line number="115" hits="1" branch="false" />
                <line number="116" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="119" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="122" hits="1" branch="false" />
                <line number="123" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
                <line number="128" hits="1" branch="false" />
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
                <line number="133" hits="1" branch="false" />
                <line number="134" hits="1" branch="false" />
                <line number="135" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
                <line number="138" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="22" hits="8" branch="false" />
            <line number="23" hits="8" branch="false" />
            <line number="24" hits="8" branch="false" />
            <line number="25" hits="8" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="110" hits="1" branch="false" />
            <line number="111" hits="1" branch="false" />
            <line number="112" hits="1" branch="false" />
            <line number="113" hits="1" branch="false" />
            <line number="114" hits="1" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="119" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="122" hits="1" branch="false" />
            <line number="123" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="133" hits="1" branch="false" />
            <line number="134" hits="1" branch="false" />
            <line number="135" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="138" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.RectangleTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\RectangleTests.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="21" hits="2" branch="false" />
                <line number="22" hits="2" branch="false" />
                <line number="23" hits="2" branch="false" />
              </lines>
            </method>
            <method name="TestDraw" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="28" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRed" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="21" hits="2" branch="false" />
            <line number="22" hits="2" branch="false" />
            <line number="23" hits="2" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.ShapeTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\Model\ShapeTests.cs" line-rate="1" branch-rate="0.5" complexity="11">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="11" branch="false" />
                <line number="30" hits="11" branch="false" />
                <line number="31" hits="11" branch="false" />
              </lines>
            </method>
            <method name="TestType" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="36" hits="1" branch="false" />
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestInformation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="44" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestSetShapeName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="53" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestSetInformation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestGetInformation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestGetInformationNumber" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="79" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestGetShapeName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDraw" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDrawRed" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestNotifyPropertyChanged" signature="()" line-rate="1" branch-rate="0.5" complexity="1">
              <lines>
                <line number="106" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
                <line number="109" hits="1" branch="false" />
                <line number="110" hits="2" branch="false" />
                <line number="111" hits="2" branch="true" condition-coverage="50% (1/2)" />
                <line number="112" hits="2" branch="false" />
                <line number="113" hits="2" branch="false" />
                <line number="114" hits="2" branch="false" />
                <line number="115" hits="2" branch="false" />
                <line number="116" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="119" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="29" hits="11" branch="false" />
            <line number="30" hits="11" branch="false" />
            <line number="31" hits="11" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="79" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="110" hits="2" branch="false" />
            <line number="111" hits="2" branch="true" condition-coverage="50% (1/2)" />
            <line number="112" hits="2" branch="false" />
            <line number="113" hits="2" branch="false" />
            <line number="114" hits="2" branch="false" />
            <line number="115" hits="2" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="119" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
          </lines>
        </class>
        <class name="PowerPoint.Tests.ViewModelTests" filename="C:\Users\tamam\OneDrive\桌面\翁廷豪的程式作業\HW#3\PowerPoint\PowerPointTests\PresentationModel\ViewModelTests.cs" line-rate="1" branch-rate="1" complexity="20">
          <methods>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="22" hits="19" branch="false" />
                <line number="23" hits="19" branch="false" />
                <line number="24" hits="19" branch="false" />
                <line number="25" hits="19" branch="false" />
              </lines>
            </method>
            <method name="TestViewModel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDraw" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="37" hits="1" branch="false" />
                <line number="38" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestResetState" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="44" hits="3" branch="false" />
                <line number="45" hits="3" branch="false" />
                <line number="46" hits="3" branch="false" />
                <line number="47" hits="3" branch="false" />
                <line number="48" hits="3" branch="false" />
                <line number="49" hits="3" branch="false" />
                <line number="50" hits="3" branch="false" />
                <line number="51" hits="3" branch="false" />
                <line number="53" hits="3" branch="false" />
              </lines>
            </method>
            <method name="TestPointer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsDrawingEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="71" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsRectangleEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsLineEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestIsEllipseEnabled" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestStartDrawing" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="103" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
                <line number="106" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestBeingRectangleMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="113" hits="1" branch="false" />
                <line number="114" hits="1" branch="false" />
                <line number="115" hits="1" branch="false" />
                <line number="116" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="119" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestBeingLineMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
                <line number="128" hits="1" branch="false" />
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestBeingEllipseMode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="135" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
                <line number="138" hits="1" branch="false" />
                <line number="139" hits="1" branch="false" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestAddShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="146" hits="1" branch="false" />
                <line number="147" hits="1" branch="false" />
                <line number="148" hits="1" branch="false" />
                <line number="149" hits="1" branch="false" />
                <line number="150" hits="1" branch="false" />
                <line number="151" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDeleteShapeButton" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="156" hits="1" branch="false" />
                <line number="157" hits="1" branch="false" />
                <line number="158" hits="1" branch="false" />
                <line number="159" hits="1" branch="false" />
                <line number="160" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestDeleteSelectedShape" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="165" hits="1" branch="false" />
                <line number="166" hits="1" branch="false" />
                <line number="167" hits="1" branch="false" />
                <line number="168" hits="1" branch="false" />
                <line number="169" hits="1" branch="false" />
                <line number="170" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestClickDrawPictureBox" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="175" hits="1" branch="false" />
                <line number="176" hits="1" branch="false" />
                <line number="177" hits="1" branch="false" />
                <line number="178" hits="1" branch="false" />
                <line number="179" hits="1" branch="false" />
                <line number="180" hits="1" branch="false" />
                <line number="181" hits="1" branch="false" />
                <line number="182" hits="1" branch="false" />
                <line number="183" hits="1" branch="false" />
                <line number="184" hits="1" branch="false" />
                <line number="185" hits="1" branch="false" />
                <line number="186" hits="1" branch="false" />
                <line number="187" hits="1" branch="false" />
                <line number="188" hits="1" branch="false" />
                <line number="189" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestPressDrawPictureBox" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="194" hits="1" branch="false" />
                <line number="195" hits="1" branch="false" />
                <line number="196" hits="1" branch="false" />
                <line number="197" hits="1" branch="false" />
                <line number="198" hits="1" branch="false" />
                <line number="199" hits="1" branch="false" />
                <line number="200" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestMoveMouseOnDrawPictureBox" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="205" hits="1" branch="false" />
                <line number="206" hits="1" branch="false" />
                <line number="207" hits="1" branch="false" />
                <line number="208" hits="1" branch="false" />
                <line number="209" hits="1" branch="false" />
                <line number="210" hits="1" branch="false" />
                <line number="211" hits="1" branch="false" />
              </lines>
            </method>
            <method name="TestReleaseDrawPictureBox" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="216" hits="1" branch="false" />
                <line number="217" hits="1" branch="false" />
                <line number="218" hits="1" branch="false" />
                <line number="219" hits="1" branch="false" />
                <line number="220" hits="1" branch="false" />
                <line number="221" hits="1" branch="false" />
                <line number="222" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="22" hits="19" branch="false" />
            <line number="23" hits="19" branch="false" />
            <line number="24" hits="19" branch="false" />
            <line number="25" hits="19" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="37" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="44" hits="3" branch="false" />
            <line number="45" hits="3" branch="false" />
            <line number="46" hits="3" branch="false" />
            <line number="47" hits="3" branch="false" />
            <line number="48" hits="3" branch="false" />
            <line number="49" hits="3" branch="false" />
            <line number="50" hits="3" branch="false" />
            <line number="51" hits="3" branch="false" />
            <line number="53" hits="3" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="113" hits="1" branch="false" />
            <line number="114" hits="1" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="119" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="135" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="138" hits="1" branch="false" />
            <line number="139" hits="1" branch="false" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
            <line number="146" hits="1" branch="false" />
            <line number="147" hits="1" branch="false" />
            <line number="148" hits="1" branch="false" />
            <line number="149" hits="1" branch="false" />
            <line number="150" hits="1" branch="false" />
            <line number="151" hits="1" branch="false" />
            <line number="156" hits="1" branch="false" />
            <line number="157" hits="1" branch="false" />
            <line number="158" hits="1" branch="false" />
            <line number="159" hits="1" branch="false" />
            <line number="160" hits="1" branch="false" />
            <line number="165" hits="1" branch="false" />
            <line number="166" hits="1" branch="false" />
            <line number="167" hits="1" branch="false" />
            <line number="168" hits="1" branch="false" />
            <line number="169" hits="1" branch="false" />
            <line number="170" hits="1" branch="false" />
            <line number="175" hits="1" branch="false" />
            <line number="176" hits="1" branch="false" />
            <line number="177" hits="1" branch="false" />
            <line number="178" hits="1" branch="false" />
            <line number="179" hits="1" branch="false" />
            <line number="180" hits="1" branch="false" />
            <line number="181" hits="1" branch="false" />
            <line number="182" hits="1" branch="false" />
            <line number="183" hits="1" branch="false" />
            <line number="184" hits="1" branch="false" />
            <line number="185" hits="1" branch="false" />
            <line number="186" hits="1" branch="false" />
            <line number="187" hits="1" branch="false" />
            <line number="188" hits="1" branch="false" />
            <line number="189" hits="1" branch="false" />
            <line number="194" hits="1" branch="false" />
            <line number="195" hits="1" branch="false" />
            <line number="196" hits="1" branch="false" />
            <line number="197" hits="1" branch="false" />
            <line number="198" hits="1" branch="false" />
            <line number="199" hits="1" branch="false" />
            <line number="200" hits="1" branch="false" />
            <line number="205" hits="1" branch="false" />
            <line number="206" hits="1" branch="false" />
            <line number="207" hits="1" branch="false" />
            <line number="208" hits="1" branch="false" />
            <line number="209" hits="1" branch="false" />
            <line number="210" hits="1" branch="false" />
            <line number="211" hits="1" branch="false" />
            <line number="216" hits="1" branch="false" />
            <line number="217" hits="1" branch="false" />
            <line number="218" hits="1" branch="false" />
            <line number="219" hits="1" branch="false" />
            <line number="220" hits="1" branch="false" />
            <line number="221" hits="1" branch="false" />
            <line number="222" hits="1" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
  </packages>
</coverage>